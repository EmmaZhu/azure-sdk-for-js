export class StorageCrc64Calculator {
  public async getCRC64Hash(src: Uint8Array): Promise<Uint8Array> {
    let result = this.ComputeSlicedSafe(src, 0n);
    const resultArray = new Uint8Array(8);
    for (let i = 0; i < 8; ++i) {
      resultArray[i] = Number(result & 255n);
      result >>= 8n;
    }

    return resultArray;
  }
  private poly = 0x9a6c9329ac4bc9b5n;

  private m_u1 = [
    0x0000000000000000n,
    0x7f6ef0c830358979n,
    0xfedde190606b12f2n,
    0x81b31158505e9b8bn,
    0xc962e5739841b68fn,
    0xb60c15bba8743ff6n,
    0x37bf04e3f82aa47dn,
    0x48d1f42bc81f2d04n,
    0xa61cecb46814fe75n,
    0xd9721c7c5821770cn,
    0x58c10d24087fec87n,
    0x27affdec384a65fen,
    0x6f7e09c7f05548fan,
    0x1010f90fc060c183n,
    0x91a3e857903e5a08n,
    0xeecd189fa00bd371n,
    0x78e0ff3b88be6f81n,
    0x078e0ff3b88be6f8n,
    0x863d1eabe8d57d73n,
    0xf953ee63d8e0f40an,
    0xb1821a4810ffd90en,
    0xceecea8020ca5077n,
    0x4f5ffbd87094cbfcn,
    0x30310b1040a14285n,
    0xdefc138fe0aa91f4n,
    0xa192e347d09f188dn,
    0x2021f21f80c18306n,
    0x5f4f02d7b0f40a7fn,
    0x179ef6fc78eb277bn,
    0x68f0063448deae02n,
    0xe943176c18803589n,
    0x962de7a428b5bcf0n,
    0xf1c1fe77117cdf02n,
    0x8eaf0ebf2149567bn,
    0x0f1c1fe77117cdf0n,
    0x7072ef2f41224489n,
    0x38a31b04893d698dn,
    0x47cdebccb908e0f4n,
    0xc67efa94e9567b7fn,
    0xb9100a5cd963f206n,
    0x57dd12c379682177n,
    0x28b3e20b495da80en,
    0xa900f35319033385n,
    0xd66e039b2936bafcn,
    0x9ebff7b0e12997f8n,
    0xe1d10778d11c1e81n,
    0x606216208142850an,
    0x1f0ce6e8b1770c73n,
    0x8921014c99c2b083n,
    0xf64ff184a9f739fan,
    0x77fce0dcf9a9a271n,
    0x08921014c99c2b08n,
    0x4043e43f0183060cn,
    0x3f2d14f731b68f75n,
    0xbe9e05af61e814fen,
    0xc1f0f56751dd9d87n,
    0x2f3dedf8f1d64ef6n,
    0x50531d30c1e3c78fn,
    0xd1e00c6891bd5c04n,
    0xae8efca0a188d57dn,
    0xe65f088b6997f879n,
    0x9931f84359a27100n,
    0x1882e91b09fcea8bn,
    0x67ec19d339c963f2n,
    0xd75adabd7a6e2d6fn,
    0xa8342a754a5ba416n,
    0x29873b2d1a053f9dn,
    0x56e9cbe52a30b6e4n,
    0x1e383fcee22f9be0n,
    0x6156cf06d21a1299n,
    0xe0e5de5e82448912n,
    0x9f8b2e96b271006bn,
    0x71463609127ad31an,
    0x0e28c6c1224f5a63n,
    0x8f9bd7997211c1e8n,
    0xf0f5275142244891n,
    0xb824d37a8a3b6595n,
    0xc74a23b2ba0eececn,
    0x46f932eaea507767n,
    0x3997c222da65fe1en,
    0xafba2586f2d042een,
    0xd0d4d54ec2e5cb97n,
    0x5167c41692bb501cn,
    0x2e0934dea28ed965n,
    0x66d8c0f56a91f461n,
    0x19b6303d5aa47d18n,
    0x980521650afae693n,
    0xe76bd1ad3acf6fean,
    0x09a6c9329ac4bc9bn,
    0x76c839faaaf135e2n,
    0xf77b28a2faafae69n,
    0x8815d86aca9a2710n,
    0xc0c42c4102850a14n,
    0xbfaadc8932b0836dn,
    0x3e19cdd162ee18e6n,
    0x41773d1952db919fn,
    0x269b24ca6b12f26dn,
    0x59f5d4025b277b14n,
    0xd846c55a0b79e09fn,
    0xa72835923b4c69e6n,
    0xeff9c1b9f35344e2n,
    0x90973171c366cd9bn,
    0x1124202993385610n,
    0x6e4ad0e1a30ddf69n,
    0x8087c87e03060c18n,
    0xffe938b633338561n,
    0x7e5a29ee636d1eean,
    0x0134d92653589793n,
    0x49e52d0d9b47ba97n,
    0x368bddc5ab7233een,
    0xb738cc9dfb2ca865n,
    0xc8563c55cb19211cn,
    0x5e7bdbf1e3ac9decn,
    0x21152b39d3991495n,
    0xa0a63a6183c78f1en,
    0xdfc8caa9b3f20667n,
    0x97193e827bed2b63n,
    0xe877ce4a4bd8a21an,
    0x69c4df121b863991n,
    0x16aa2fda2bb3b0e8n,
    0xf86737458bb86399n,
    0x8709c78dbb8deae0n,
    0x06bad6d5ebd3716bn,
    0x79d4261ddbe6f812n,
    0x3105d23613f9d516n,
    0x4e6b22fe23cc5c6fn,
    0xcfd833a67392c7e4n,
    0xb0b6c36e43a74e9dn,
    0x9a6c9329ac4bc9b5n,
    0xe50263e19c7e40ccn,
    0x64b172b9cc20db47n,
    0x1bdf8271fc15523en,
    0x530e765a340a7f3an,
    0x2c608692043ff643n,
    0xadd397ca54616dc8n,
    0xd2bd67026454e4b1n,
    0x3c707f9dc45f37c0n,
    0x431e8f55f46abeb9n,
    0xc2ad9e0da4342532n,
    0xbdc36ec59401ac4bn,
    0xf5129aee5c1e814fn,
    0x8a7c6a266c2b0836n,
    0x0bcf7b7e3c7593bdn,
    0x74a18bb60c401ac4n,
    0xe28c6c1224f5a634n,
    0x9de29cda14c02f4dn,
    0x1c518d82449eb4c6n,
    0x633f7d4a74ab3dbfn,
    0x2bee8961bcb410bbn,
    0x548079a98c8199c2n,
    0xd53368f1dcdf0249n,
    0xaa5d9839ecea8b30n,
    0x449080a64ce15841n,
    0x3bfe706e7cd4d138n,
    0xba4d61362c8a4ab3n,
    0xc52391fe1cbfc3can,
    0x8df265d5d4a0eecen,
    0xf29c951de49567b7n,
    0x732f8445b4cbfc3cn,
    0x0c41748d84fe7545n,
    0x6bad6d5ebd3716b7n,
    0x14c39d968d029fcen,
    0x95708ccedd5c0445n,
    0xea1e7c06ed698d3cn,
    0xa2cf882d2576a038n,
    0xdda178e515432941n,
    0x5c1269bd451db2can,
    0x237c997575283bb3n,
    0xcdb181ead523e8c2n,
    0xb2df7122e51661bbn,
    0x336c607ab548fa30n,
    0x4c0290b2857d7349n,
    0x04d364994d625e4dn,
    0x7bbd94517d57d734n,
    0xfa0e85092d094cbfn,
    0x856075c11d3cc5c6n,
    0x134d926535897936n,
    0x6c2362ad05bcf04fn,
    0xed9073f555e26bc4n,
    0x92fe833d65d7e2bdn,
    0xda2f7716adc8cfb9n,
    0xa54187de9dfd46c0n,
    0x24f29686cda3dd4bn,
    0x5b9c664efd965432n,
    0xb5517ed15d9d8743n,
    0xca3f8e196da80e3an,
    0x4b8c9f413df695b1n,
    0x34e26f890dc31cc8n,
    0x7c339ba2c5dc31ccn,
    0x035d6b6af5e9b8b5n,
    0x82ee7a32a5b7233en,
    0xfd808afa9582aa47n,
    0x4d364994d625e4dan,
    0x3258b95ce6106da3n,
    0xb3eba804b64ef628n,
    0xcc8558cc867b7f51n,
    0x8454ace74e645255n,
    0xfb3a5c2f7e51db2cn,
    0x7a894d772e0f40a7n,
    0x05e7bdbf1e3ac9den,
    0xeb2aa520be311aafn,
    0x944455e88e0493d6n,
    0x15f744b0de5a085dn,
    0x6a99b478ee6f8124n,
    0x224840532670ac20n,
    0x5d26b09b16452559n,
    0xdc95a1c3461bbed2n,
    0xa3fb510b762e37abn,
    0x35d6b6af5e9b8b5bn,
    0x4ab846676eae0222n,
    0xcb0b573f3ef099a9n,
    0xb465a7f70ec510d0n,
    0xfcb453dcc6da3dd4n,
    0x83daa314f6efb4adn,
    0x0269b24ca6b12f26n,
    0x7d0742849684a65fn,
    0x93ca5a1b368f752en,
    0xeca4aad306bafc57n,
    0x6d17bb8b56e467dcn,
    0x12794b4366d1eea5n,
    0x5aa8bf68aecec3a1n,
    0x25c64fa09efb4ad8n,
    0xa4755ef8cea5d153n,
    0xdb1bae30fe90582an,
    0xbcf7b7e3c7593bd8n,
    0xc399472bf76cb2a1n,
    0x422a5673a732292an,
    0x3d44a6bb9707a053n,
    0x759552905f188d57n,
    0x0afba2586f2d042en,
    0x8b48b3003f739fa5n,
    0xf42643c80f4616dcn,
    0x1aeb5b57af4dc5adn,
    0x6585ab9f9f784cd4n,
    0xe436bac7cf26d75fn,
    0x9b584a0fff135e26n,
    0xd389be24370c7322n,
    0xace74eec0739fa5bn,
    0x2d545fb4576761d0n,
    0x523aaf7c6752e8a9n,
    0xc41748d84fe75459n,
    0xbb79b8107fd2dd20n,
    0x3acaa9482f8c46abn,
    0x45a459801fb9cfd2n,
    0x0d75adabd7a6e2d6n,
    0x721b5d63e7936bafn,
    0xf3a84c3bb7cdf024n,
    0x8cc6bcf387f8795dn,
    0x620ba46c27f3aa2cn,
    0x1d6554a417c62355n,
    0x9cd645fc4798b8den,
    0xe3b8b53477ad31a7n,
    0xab69411fbfb21ca3n,
    0xd407b1d78f8795dan,
    0x55b4a08fdfd90e51n,
    0x2ada5047efec8728n,
  ];

  private m_u32 = [
    0x0000000000000000n,
    0xb8c533c1177eb231n,
    0x455341d1766af709n,
    0xfd96721061144538n,
    0x8aa683a2ecd5ee12n,
    0x3263b063fbab5c23n,
    0xcff5c2739abf191bn,
    0x7730f1b28dc1ab2an,
    0x21942116813c4f4fn,
    0x995112d79642fd7en,
    0x64c760c7f756b846n,
    0xdc025306e0280a77n,
    0xab32a2b46de9a15dn,
    0x13f791757a97136cn,
    0xee61e3651b835654n,
    0x56a4d0a40cfde465n,
    0x4328422d02789e9en,
    0xfbed71ec15062cafn,
    0x067b03fc74126997n,
    0xbebe303d636cdba6n,
    0xc98ec18feead708cn,
    0x714bf24ef9d3c2bdn,
    0x8cdd805e98c78785n,
    0x3418b39f8fb935b4n,
    0x62bc633b8344d1d1n,
    0xda7950fa943a63e0n,
    0x27ef22eaf52e26d8n,
    0x9f2a112be25094e9n,
    0xe81ae0996f913fc3n,
    0x50dfd35878ef8df2n,
    0xad49a14819fbc8can,
    0x158c92890e857afbn,
    0x8650845a04f13d3cn,
    0x3e95b79b138f8f0dn,
    0xc303c58b729bca35n,
    0x7bc6f64a65e57804n,
    0x0cf607f8e824d32en,
    0xb4333439ff5a611fn,
    0x49a546299e4e2427n,
    0xf16075e889309616n,
    0xa7c4a54c85cd7273n,
    0x1f01968d92b3c042n,
    0xe297e49df3a7857an,
    0x5a52d75ce4d9374bn,
    0x2d6226ee69189c61n,
    0x95a7152f7e662e50n,
    0x6831673f1f726b68n,
    0xd0f454fe080cd959n,
    0xc578c6770689a3a2n,
    0x7dbdf5b611f71193n,
    0x802b87a670e354abn,
    0x38eeb467679de69an,
    0x4fde45d5ea5c4db0n,
    0xf71b7614fd22ff81n,
    0x0a8d04049c36bab9n,
    0xb24837c58b480888n,
    0xe4ece76187b5ecedn,
    0x5c29d4a090cb5edcn,
    0xa1bfa6b0f1df1be4n,
    0x197a9571e6a1a9d5n,
    0x6e4a64c36b6002ffn,
    0xd68f57027c1eb0cen,
    0x2b1925121d0af5f6n,
    0x93dc16d30a7447c7n,
    0x38782ee75175e913n,
    0x80bd1d26460b5b22n,
    0x7d2b6f36271f1e1an,
    0xc5ee5cf73061ac2bn,
    0xb2dead45bda00701n,
    0x0a1b9e84aadeb530n,
    0xf78dec94cbcaf008n,
    0x4f48df55dcb44239n,
    0x19ec0ff1d049a65cn,
    0xa1293c30c737146dn,
    0x5cbf4e20a6235155n,
    0xe47a7de1b15de364n,
    0x934a8c533c9c484en,
    0x2b8fbf922be2fa7fn,
    0xd619cd824af6bf47n,
    0x6edcfe435d880d76n,
    0x7b506cca530d778dn,
    0xc3955f0b4473c5bcn,
    0x3e032d1b25678084n,
    0x86c61eda321932b5n,
    0xf1f6ef68bfd8999fn,
    0x4933dca9a8a62baen,
    0xb4a5aeb9c9b26e96n,
    0x0c609d78deccdca7n,
    0x5ac44ddcd23138c2n,
    0xe2017e1dc54f8af3n,
    0x1f970c0da45bcfcbn,
    0xa7523fccb3257dfan,
    0xd062ce7e3ee4d6d0n,
    0x68a7fdbf299a64e1n,
    0x95318faf488e21d9n,
    0x2df4bc6e5ff093e8n,
    0xbe28aabd5584d42fn,
    0x06ed997c42fa661en,
    0xfb7beb6c23ee2326n,
    0x43bed8ad34909117n,
    0x348e291fb9513a3dn,
    0x8c4b1adeae2f880cn,
    0x71dd68cecf3bcd34n,
    0xc9185b0fd8457f05n,
    0x9fbc8babd4b89b60n,
    0x2779b86ac3c62951n,
    0xdaefca7aa2d26c69n,
    0x622af9bbb5acde58n,
    0x151a0809386d7572n,
    0xaddf3bc82f13c743n,
    0x504949d84e07827bn,
    0xe88c7a195979304an,
    0xfd00e89057fc4ab1n,
    0x45c5db514082f880n,
    0xb853a9412196bdb8n,
    0x00969a8036e80f89n,
    0x77a66b32bb29a4a3n,
    0xcf6358f3ac571692n,
    0x32f52ae3cd4353aan,
    0x8a301922da3de19bn,
    0xdc94c986d6c005fen,
    0x6451fa47c1beb7cfn,
    0x99c78857a0aaf2f7n,
    0x2102bb96b7d440c6n,
    0x56324a243a15ebecn,
    0xeef779e52d6b59ddn,
    0x13610bf54c7f1ce5n,
    0xaba438345b01aed4n,
    0x70f05dcea2ebd226n,
    0xc8356e0fb5956017n,
    0x35a31c1fd481252fn,
    0x8d662fdec3ff971en,
    0xfa56de6c4e3e3c34n,
    0x4293edad59408e05n,
    0xbf059fbd3854cb3dn,
    0x07c0ac7c2f2a790cn,
    0x51647cd823d79d69n,
    0xe9a14f1934a92f58n,
    0x14373d0955bd6a60n,
    0xacf20ec842c3d851n,
    0xdbc2ff7acf02737bn,
    0x6307ccbbd87cc14an,
    0x9e91beabb9688472n,
    0x26548d6aae163643n,
    0x33d81fe3a0934cb8n,
    0x8b1d2c22b7edfe89n,
    0x768b5e32d6f9bbb1n,
    0xce4e6df3c1870980n,
    0xb97e9c414c46a2aan,
    0x01bbaf805b38109bn,
    0xfc2ddd903a2c55a3n,
    0x44e8ee512d52e792n,
    0x124c3ef521af03f7n,
    0xaa890d3436d1b1c6n,
    0x571f7f2457c5f4fen,
    0xefda4ce540bb46cfn,
    0x98eabd57cd7aede5n,
    0x202f8e96da045fd4n,
    0xddb9fc86bb101aecn,
    0x657ccf47ac6ea8ddn,
    0xf6a0d994a61aef1an,
    0x4e65ea55b1645d2bn,
    0xb3f39845d0701813n,
    0x0b36ab84c70eaa22n,
    0x7c065a364acf0108n,
    0xc4c369f75db1b339n,
    0x39551be73ca5f601n,
    0x819028262bdb4430n,
    0xd734f8822726a055n,
    0x6ff1cb4330581264n,
    0x9267b953514c575cn,
    0x2aa28a924632e56dn,
    0x5d927b20cbf34e47n,
    0xe55748e1dc8dfc76n,
    0x18c13af1bd99b94en,
    0xa0040930aae70b7fn,
    0xb5889bb9a4627184n,
    0x0d4da878b31cc3b5n,
    0xf0dbda68d208868dn,
    0x481ee9a9c57634bcn,
    0x3f2e181b48b79f96n,
    0x87eb2bda5fc92da7n,
    0x7a7d59ca3edd689fn,
    0xc2b86a0b29a3daaen,
    0x941cbaaf255e3ecbn,
    0x2cd9896e32208cfan,
    0xd14ffb7e5334c9c2n,
    0x698ac8bf444a7bf3n,
    0x1eba390dc98bd0d9n,
    0xa67f0accdef562e8n,
    0x5be978dcbfe127d0n,
    0xe32c4b1da89f95e1n,
    0x48887329f39e3b35n,
    0xf04d40e8e4e08904n,
    0x0ddb32f885f4cc3cn,
    0xb51e0139928a7e0dn,
    0xc22ef08b1f4bd527n,
    0x7aebc34a08356716n,
    0x877db15a6921222en,
    0x3fb8829b7e5f901fn,
    0x691c523f72a2747an,
    0xd1d961fe65dcc64bn,
    0x2c4f13ee04c88373n,
    0x948a202f13b63142n,
    0xe3bad19d9e779a68n,
    0x5b7fe25c89092859n,
    0xa6e9904ce81d6d61n,
    0x1e2ca38dff63df50n,
    0x0ba03104f1e6a5abn,
    0xb36502c5e698179an,
    0x4ef370d5878c52a2n,
    0xf636431490f2e093n,
    0x8106b2a61d334bb9n,
    0x39c381670a4df988n,
    0xc455f3776b59bcb0n,
    0x7c90c0b67c270e81n,
    0x2a34101270daeae4n,
    0x92f123d367a458d5n,
    0x6f6751c306b01dedn,
    0xd7a2620211ceafdcn,
    0xa09293b09c0f04f6n,
    0x1857a0718b71b6c7n,
    0xe5c1d261ea65f3ffn,
    0x5d04e1a0fd1b41cen,
    0xced8f773f76f0609n,
    0x761dc4b2e011b438n,
    0x8b8bb6a28105f100n,
    0x334e8563967b4331n,
    0x447e74d11bbae81bn,
    0xfcbb47100cc45a2an,
    0x012d35006dd01f12n,
    0xb9e806c17aaead23n,
    0xef4cd66576534946n,
    0x5789e5a4612dfb77n,
    0xaa1f97b40039be4fn,
    0x12daa47517470c7en,
    0x65ea55c79a86a754n,
    0xdd2f66068df81565n,
    0x20b91416ecec505dn,
    0x987c27d7fb92e26cn,
    0x8df0b55ef5179897n,
    0x3535869fe2692aa6n,
    0xc8a3f48f837d6f9en,
    0x7066c74e9403ddafn,
    0x075636fc19c27685n,
    0xbf93053d0ebcc4b4n,
    0x4205772d6fa8818cn,
    0xfac044ec78d633bdn,
    0xac649448742bd7d8n,
    0x14a1a789635565e9n,
    0xe937d599024120d1n,
    0x51f2e658153f92e0n,
    0x26c217ea98fe39can,
    0x9e07242b8f808bfbn,
    0x6391563bee94cec3n,
    0xdb5465faf9ea7cf2n,

    0x0000000000000000n,
    0xf6f734b768e04748n,
    0xd9374f3d89571dfbn,
    0x2fc07b8ae1b75ab3n,
    0x86b7b8284a39a89dn,
    0x70408c9f22d9efd5n,
    0x5f80f715c36eb566n,
    0xa977c3a2ab8ef22en,
    0x39b65603cce4c251n,
    0xcf4162b4a4048519n,
    0xe081193e45b3dfaan,
    0x16762d892d5398e2n,
    0xbf01ee2b86dd6accn,
    0x49f6da9cee3d2d84n,
    0x6636a1160f8a7737n,
    0x90c195a1676a307fn,
    0x736cac0799c984a2n,
    0x859b98b0f129c3ean,
    0xaa5be33a109e9959n,
    0x5cacd78d787ede11n,
    0xf5db142fd3f02c3fn,
    0x032c2098bb106b77n,
    0x2cec5b125aa731c4n,
    0xda1b6fa53247768cn,
    0x4adafa04552d46f3n,
    0xbc2dceb33dcd01bbn,
    0x93edb539dc7a5b08n,
    0x651a818eb49a1c40n,
    0xcc6d422c1f14ee6en,
    0x3a9a769b77f4a926n,
    0x155a0d119643f395n,
    0xe3ad39a6fea3b4ddn,
    0xe6d9580f33930944n,
    0x102e6cb85b734e0cn,
    0x3fee1732bac414bfn,
    0xc9192385d22453f7n,
    0x606ee02779aaa1d9n,
    0x9699d490114ae691n,
    0xb959af1af0fdbc22n,
    0x4fae9bad981dfb6an,
    0xdf6f0e0cff77cb15n,
    0x29983abb97978c5dn,
    0x065841317620d6een,
    0xf0af75861ec091a6n,
    0x59d8b624b54e6388n,
    0xaf2f8293ddae24c0n,
    0x80eff9193c197e73n,
    0x7618cdae54f9393bn,
    0x95b5f408aa5a8de6n,
    0x6342c0bfc2bacaaen,
    0x4c82bb35230d901dn,
    0xba758f824bedd755n,
    0x13024c20e063257bn,
    0xe5f5789788836233n,
    0xca35031d69343880n,
    0x3cc237aa01d47fc8n,
    0xac03a20b66be4fb7n,
    0x5af496bc0e5e08ffn,
    0x7534ed36efe9524cn,
    0x83c3d98187091504n,
    0x2ab41a232c87e72an,
    0xdc432e944467a062n,
    0xf383551ea5d0fad1n,
    0x057461a9cd30bd99n,
    0xf96b964d3fb181e3n,
    0x0f9ca2fa5751c6abn,
    0x205cd970b6e69c18n,
    0xd6abedc7de06db50n,
    0x7fdc2e657588297en,
    0x892b1ad21d686e36n,
    0xa6eb6158fcdf3485n,
    0x501c55ef943f73cdn,
    0xc0ddc04ef35543b2n,
    0x362af4f99bb504fan,
    0x19ea8f737a025e49n,
    0xef1dbbc412e21901n,
    0x466a7866b96ceb2fn,
    0xb09d4cd1d18cac67n,
    0x9f5d375b303bf6d4n,
    0x69aa03ec58dbb19cn,
    0x8a073a4aa6780541n,
    0x7cf00efdce984209n,
    0x533075772f2f18ban,
    0xa5c741c047cf5ff2n,
    0x0cb08262ec41addcn,
    0xfa47b6d584a1ea94n,
    0xd587cd5f6516b027n,
    0x2370f9e80df6f76fn,
    0xb3b16c496a9cc710n,
    0x454658fe027c8058n,
    0x6a862374e3cbdaebn,
    0x9c7117c38b2b9da3n,
    0x3506d46120a56f8dn,
    0xc3f1e0d6484528c5n,
    0xec319b5ca9f27276n,
    0x1ac6afebc112353en,
    0x1fb2ce420c2288a7n,
    0xe945faf564c2cfefn,
    0xc685817f8575955cn,
    0x3072b5c8ed95d214n,
    0x9905766a461b203an,
    0x6ff242dd2efb6772n,
    0x40323957cf4c3dc1n,
    0xb6c50de0a7ac7a89n,
    0x26049841c0c64af6n,
    0xd0f3acf6a8260dben,
    0xff33d77c4991570dn,
    0x09c4e3cb21711045n,
    0xa0b320698affe26bn,
    0x564414dee21fa523n,
    0x79846f5403a8ff90n,
    0x8f735be36b48b8d8n,
    0x6cde624595eb0c05n,
    0x9a2956f2fd0b4b4dn,
    0xb5e92d781cbc11fen,
    0x431e19cf745c56b6n,
    0xea69da6ddfd2a498n,
    0x1c9eeedab732e3d0n,
    0x335e95505685b963n,
    0xc5a9a1e73e65fe2bn,
    0x55683446590fce54n,
    0xa39f00f131ef891cn,
    0x8c5f7b7bd058d3afn,
    0x7aa84fccb8b894e7n,
    0xd3df8c6e133666c9n,
    0x2528b8d97bd62181n,
    0x0ae8c3539a617b32n,
    0xfc1ff7e4f2813c7an,
    0xc60e0ac927f490adn,
    0x30f93e7e4f14d7e5n,
    0x1f3945f4aea38d56n,
    0xe9ce7143c643ca1en,
    0x40b9b2e16dcd3830n,
    0xb64e8656052d7f78n,
    0x998efddce49a25cbn,
    0x6f79c96b8c7a6283n,
    0xffb85ccaeb1052fcn,
    0x094f687d83f015b4n,
    0x268f13f762474f07n,
    0xd07827400aa7084fn,
    0x790fe4e2a129fa61n,
    0x8ff8d055c9c9bd29n,
    0xa038abdf287ee79an,
    0x56cf9f68409ea0d2n,
    0xb562a6cebe3d140fn,
    0x43959279d6dd5347n,
    0x6c55e9f3376a09f4n,
    0x9aa2dd445f8a4ebcn,
    0x33d51ee6f404bc92n,
    0xc5222a519ce4fbdan,
    0xeae251db7d53a169n,
    0x1c15656c15b3e621n,
    0x8cd4f0cd72d9d65en,
    0x7a23c47a1a399116n,
    0x55e3bff0fb8ecba5n,
    0xa3148b47936e8cedn,
    0x0a6348e538e07ec3n,
    0xfc947c525000398bn,
    0xd35407d8b1b76338n,
    0x25a3336fd9572470n,
    0x20d752c6146799e9n,
    0xd62066717c87dea1n,
    0xf9e01dfb9d308412n,
    0x0f17294cf5d0c35an,
    0xa660eaee5e5e3174n,
    0x5097de5936be763cn,
    0x7f57a5d3d7092c8fn,
    0x89a09164bfe96bc7n,
    0x196104c5d8835bb8n,
    0xef963072b0631cf0n,
    0xc0564bf851d44643n,
    0x36a17f4f3934010bn,
    0x9fd6bced92baf325n,
    0x6921885afa5ab46dn,
    0x46e1f3d01bedeeden,
    0xb016c767730da996n,
    0x53bbfec18dae1d4bn,
    0xa54cca76e54e5a03n,
    0x8a8cb1fc04f900b0n,
    0x7c7b854b6c1947f8n,
    0xd50c46e9c797b5d6n,
    0x23fb725eaf77f29en,
    0x0c3b09d44ec0a82dn,
    0xfacc3d632620ef65n,
    0x6a0da8c2414adf1an,
    0x9cfa9c7529aa9852n,
    0xb33ae7ffc81dc2e1n,
    0x45cdd348a0fd85a9n,
    0xecba10ea0b737787n,
    0x1a4d245d639330cfn,
    0x358d5fd782246a7cn,
    0xc37a6b60eac42d34n,
    0x3f659c841845114en,
    0xc992a83370a55606n,
    0xe652d3b991120cb5n,
    0x10a5e70ef9f24bfdn,
    0xb9d224ac527cb9d3n,
    0x4f25101b3a9cfe9bn,
    0x60e56b91db2ba428n,
    0x96125f26b3cbe360n,
    0x06d3ca87d4a1d31fn,
    0xf024fe30bc419457n,
    0xdfe485ba5df6cee4n,
    0x2913b10d351689acn,
    0x806472af9e987b82n,
    0x76934618f6783ccan,
    0x59533d9217cf6679n,
    0xafa409257f2f2131n,
    0x4c093083818c95ecn,
    0xbafe0434e96cd2a4n,
    0x953e7fbe08db8817n,
    0x63c94b09603bcf5fn,
    0xcabe88abcbb53d71n,
    0x3c49bc1ca3557a39n,
    0x1389c79642e2208an,
    0xe57ef3212a0267c2n,
    0x75bf66804d6857bdn,
    0x83485237258810f5n,
    0xac8829bdc43f4a46n,
    0x5a7f1d0aacdf0d0en,
    0xf308dea80751ff20n,
    0x05ffea1f6fb1b868n,
    0x2a3f91958e06e2dbn,
    0xdcc8a522e6e6a593n,
    0xd9bcc48b2bd6180an,
    0x2f4bf03c43365f42n,
    0x008b8bb6a28105f1n,
    0xf67cbf01ca6142b9n,
    0x5f0b7ca361efb097n,
    0xa9fc4814090ff7dfn,
    0x863c339ee8b8ad6cn,
    0x70cb07298058ea24n,
    0xe00a9288e732da5bn,
    0x16fda63f8fd29d13n,
    0x393dddb56e65c7a0n,
    0xcfcae902068580e8n,
    0x66bd2aa0ad0b72c6n,
    0x904a1e17c5eb358en,
    0xbf8a659d245c6f3dn,
    0x497d512a4cbc2875n,
    0xaad0688cb21f9ca8n,
    0x5c275c3bdaffdbe0n,
    0x73e727b13b488153n,
    0x8510130653a8c61bn,
    0x2c67d0a4f8263435n,
    0xda90e41390c6737dn,
    0xf5509f99717129cen,
    0x03a7ab2e19916e86n,
    0x93663e8f7efb5ef9n,
    0x65910a38161b19b1n,
    0x4a5171b2f7ac4302n,
    0xbca645059f4c044an,
    0x15d186a734c2f664n,
    0xe326b2105c22b12cn,
    0xcce6c99abd95eb9fn,
    0x3a11fd2dd575acd7n,

    0x0000000000000000n,
    0x71b0c13da512335dn,
    0xe361827b4a2466ban,
    0x92d14346ef3655e7n,
    0xf21a22a5ccdf5e1fn,
    0x83aae39869cd6d42n,
    0x117ba0de86fb38a5n,
    0x60cb61e323e90bf8n,
    0xd0ed6318c1292f55n,
    0xa15da225643b1c08n,
    0x338ce1638b0d49efn,
    0x423c205e2e1f7ab2n,
    0x22f741bd0df6714an,
    0x53478080a8e44217n,
    0xc196c3c647d217f0n,
    0xb02602fbe2c024adn,
    0x9503e062dac5cdc1n,
    0xe4b3215f7fd7fe9cn,
    0x7662621990e1ab7bn,
    0x07d2a32435f39826n,
    0x6719c2c7161a93den,
    0x16a903fab308a083n,
    0x847840bc5c3ef564n,
    0xf5c88181f92cc639n,
    0x45ee837a1bece294n,
    0x345e4247befed1c9n,
    0xa68f010151c8842en,
    0xd73fc03cf4dab773n,
    0xb7f4a1dfd733bc8bn,
    0xc64460e272218fd6n,
    0x549523a49d17da31n,
    0x2525e2993805e96cn,
    0x1edee696ed1c08e9n,
    0x6f6e27ab480e3bb4n,
    0xfdbf64eda7386e53n,
    0x8c0fa5d0022a5d0en,
    0xecc4c43321c356f6n,
    0x9d74050e84d165abn,
    0x0fa546486be7304cn,
    0x7e158775cef50311n,
    0xce33858e2c3527bcn,
    0xbf8344b3892714e1n,
    0x2d5207f566114106n,
    0x5ce2c6c8c303725bn,
    0x3c29a72be0ea79a3n,
    0x4d99661645f84afen,
    0xdf482550aace1f19n,
    0xaef8e46d0fdc2c44n,
    0x8bdd06f437d9c528n,
    0xfa6dc7c992cbf675n,
    0x68bc848f7dfda392n,
    0x190c45b2d8ef90cfn,
    0x79c72451fb069b37n,
    0x0877e56c5e14a86an,
    0x9aa6a62ab122fd8dn,
    0xeb1667171430ced0n,
    0x5b3065ecf6f0ea7dn,
    0x2a80a4d153e2d920n,
    0xb851e797bcd48cc7n,
    0xc9e126aa19c6bf9an,
    0xa92a47493a2fb462n,
    0xd89a86749f3d873fn,
    0x4a4bc532700bd2d8n,
    0x3bfb040fd519e185n,
    0x3dbdcd2dda3811d2n,
    0x4c0d0c107f2a228fn,
    0xdedc4f56901c7768n,
    0xaf6c8e6b350e4435n,
    0xcfa7ef8816e74fcdn,
    0xbe172eb5b3f57c90n,
    0x2cc66df35cc32977n,
    0x5d76accef9d11a2an,
    0xed50ae351b113e87n,
    0x9ce06f08be030ddan,
    0x0e312c4e5135583dn,
    0x7f81ed73f4276b60n,
    0x1f4a8c90d7ce6098n,
    0x6efa4dad72dc53c5n,
    0xfc2b0eeb9dea0622n,
    0x8d9bcfd638f8357fn,
    0xa8be2d4f00fddc13n,
    0xd90eec72a5efef4en,
    0x4bdfaf344ad9baa9n,
    0x3a6f6e09efcb89f4n,
    0x5aa40feacc22820cn,
    0x2b14ced76930b151n,
    0xb9c58d918606e4b6n,
    0xc8754cac2314d7ebn,
    0x78534e57c1d4f346n,
    0x09e38f6a64c6c01bn,
    0x9b32cc2c8bf095fcn,
    0xea820d112ee2a6a1n,
    0x8a496cf20d0bad59n,
    0xfbf9adcfa8199e04n,
    0x6928ee89472fcbe3n,
    0x18982fb4e23df8ben,
    0x23632bbb3724193bn,
    0x52d3ea8692362a66n,
    0xc002a9c07d007f81n,
    0xb1b268fdd8124cdcn,
    0xd179091efbfb4724n,
    0xa0c9c8235ee97479n,
    0x32188b65b1df219en,
    0x43a84a5814cd12c3n,
    0xf38e48a3f60d366en,
    0x823e899e531f0533n,
    0x10efcad8bc2950d4n,
    0x615f0be5193b6389n,
    0x01946a063ad26871n,
    0x7024ab3b9fc05b2cn,
    0xe2f5e87d70f60ecbn,
    0x93452940d5e43d96n,
    0xb660cbd9ede1d4fan,
    0xc7d00ae448f3e7a7n,
    0x550149a2a7c5b240n,
    0x24b1889f02d7811dn,
    0x447ae97c213e8ae5n,
    0x35ca2841842cb9b8n,
    0xa71b6b076b1aec5fn,
    0xd6abaa3ace08df02n,
    0x668da8c12cc8fbafn,
    0x173d69fc89dac8f2n,
    0x85ec2aba66ec9d15n,
    0xf45ceb87c3feae48n,
    0x94978a64e017a5b0n,
    0xe5274b59450596edn,
    0x77f6081faa33c30an,
    0x0646c9220f21f057n,
    0x7b7b9a5bb47023a4n,
    0x0acb5b66116210f9n,
    0x981a1820fe54451en,
    0xe9aad91d5b467643n,
    0x8961b8fe78af7dbbn,
    0xf8d179c3ddbd4ee6n,
    0x6a003a85328b1b01n,
    0x1bb0fbb89799285cn,
    0xab96f94375590cf1n,
    0xda26387ed04b3facn,
    0x48f77b383f7d6a4bn,
    0x3947ba059a6f5916n,
    0x598cdbe6b98652een,
    0x283c1adb1c9461b3n,
    0xbaed599df3a23454n,
    0xcb5d98a056b00709n,
    0xee787a396eb5ee65n,
    0x9fc8bb04cba7dd38n,
    0x0d19f842249188dfn,
    0x7ca9397f8183bb82n,
    0x1c62589ca26ab07an,
    0x6dd299a107788327n,
    0xff03dae7e84ed6c0n,
    0x8eb31bda4d5ce59dn,
    0x3e951921af9cc130n,
    0x4f25d81c0a8ef26dn,
    0xddf49b5ae5b8a78an,
    0xac445a6740aa94d7n,
    0xcc8f3b8463439f2fn,
    0xbd3ffab9c651ac72n,
    0x2feeb9ff2967f995n,
    0x5e5e78c28c75cac8n,
    0x65a57ccd596c2b4dn,
    0x1415bdf0fc7e1810n,
    0x86c4feb613484df7n,
    0xf7743f8bb65a7eaan,
    0x97bf5e6895b37552n,
    0xe60f9f5530a1460fn,
    0x74dedc13df9713e8n,
    0x056e1d2e7a8520b5n,
    0xb5481fd598450418n,
    0xc4f8dee83d573745n,
    0x56299daed26162a2n,
    0x27995c93777351ffn,
    0x47523d70549a5a07n,
    0x36e2fc4df188695an,
    0xa433bf0b1ebe3cbdn,
    0xd5837e36bbac0fe0n,
    0xf0a69caf83a9e68cn,
    0x81165d9226bbd5d1n,
    0x13c71ed4c98d8036n,
    0x6277dfe96c9fb36bn,
    0x02bcbe0a4f76b893n,
    0x730c7f37ea648bcen,
    0xe1dd3c710552de29n,
    0x906dfd4ca040ed74n,
    0x204bffb74280c9d9n,
    0x51fb3e8ae792fa84n,
    0xc32a7dcc08a4af63n,
    0xb29abcf1adb69c3en,
    0xd251dd128e5f97c6n,
    0xa3e11c2f2b4da49bn,
    0x31305f69c47bf17cn,
    0x40809e546169c221n,
    0x46c657766e483276n,
    0x3776964bcb5a012bn,
    0xa5a7d50d246c54ccn,
    0xd4171430817e6791n,
    0xb4dc75d3a2976c69n,
    0xc56cb4ee07855f34n,
    0x57bdf7a8e8b30ad3n,
    0x260d36954da1398en,
    0x962b346eaf611d23n,
    0xe79bf5530a732e7en,
    0x754ab615e5457b99n,
    0x04fa7728405748c4n,
    0x643116cb63be433cn,
    0x1581d7f6c6ac7061n,
    0x875094b0299a2586n,
    0xf6e0558d8c8816dbn,
    0xd3c5b714b48dffb7n,
    0xa2757629119fccean,
    0x30a4356ffea9990dn,
    0x4114f4525bbbaa50n,
    0x21df95b17852a1a8n,
    0x506f548cdd4092f5n,
    0xc2be17ca3276c712n,
    0xb30ed6f79764f44fn,
    0x0328d40c75a4d0e2n,
    0x72981531d0b6e3bfn,
    0xe04956773f80b658n,
    0x91f9974a9a928505n,
    0xf132f6a9b97b8efdn,
    0x808237941c69bda0n,
    0x125374d2f35fe847n,
    0x63e3b5ef564ddb1an,
    0x5818b1e083543a9fn,
    0x29a870dd264609c2n,
    0xbb79339bc9705c25n,
    0xcac9f2a66c626f78n,
    0xaa0293454f8b6480n,
    0xdbb25278ea9957ddn,
    0x4963113e05af023an,
    0x38d3d003a0bd3167n,
    0x88f5d2f8427d15can,
    0xf94513c5e76f2697n,
    0x6b94508308597370n,
    0x1a2491bead4b402dn,
    0x7aeff05d8ea24bd5n,
    0x0b5f31602bb07888n,
    0x998e7226c4862d6fn,
    0xe83eb31b61941e32n,
    0xcd1b51825991f75en,
    0xbcab90bffc83c403n,
    0x2e7ad3f913b591e4n,
    0x5fca12c4b6a7a2b9n,
    0x3f017327954ea941n,
    0x4eb1b21a305c9a1cn,
    0xdc60f15cdf6acffbn,
    0xadd030617a78fca6n,
    0x1df6329a98b8d80bn,
    0x6c46f3a73daaeb56n,
    0xfe97b0e1d29cbeb1n,
    0x8f2771dc778e8decn,
    0xefec103f54678614n,
    0x9e5cd102f175b549n,
    0x0c8d92441e43e0aen,
    0x7d3d5379bb51d3f3n,

    0x0000000000000000n,
    0xbfdb6c480f15915en,
    0x4b6ffec346bcb1d7n,
    0xf4b4928b49a92089n,
    0x96dffd868d7963aen,
    0x290491ce826cf2f0n,
    0xddb00345cbc5d279n,
    0x626b6f0dc4d04327n,
    0x1966dd5e42655437n,
    0xa6bdb1164d70c569n,
    0x5209239d04d9e5e0n,
    0xedd24fd50bcc74ben,
    0x8fb920d8cf1c3799n,
    0x30624c90c009a6c7n,
    0xc4d6de1b89a0864en,
    0x7b0db25386b51710n,
    0x32cdbabc84caa86en,
    0x8d16d6f48bdf3930n,
    0x79a2447fc27619b9n,
    0xc6792837cd6388e7n,
    0xa412473a09b3cbc0n,
    0x1bc92b7206a65a9en,
    0xef7db9f94f0f7a17n,
    0x50a6d5b1401aeb49n,
    0x2bab67e2c6affc59n,
    0x94700baac9ba6d07n,
    0x60c4992180134d8en,
    0xdf1ff5698f06dcd0n,
    0xbd749a644bd69ff7n,
    0x02aff62c44c30ea9n,
    0xf61b64a70d6a2e20n,
    0x49c008ef027fbf7en,
    0x659b7579099550dcn,
    0xda4019310680c182n,
    0x2ef48bba4f29e10bn,
    0x912fe7f2403c7055n,
    0xf34488ff84ec3372n,
    0x4c9fe4b78bf9a22cn,
    0xb82b763cc25082a5n,
    0x07f01a74cd4513fbn,
    0x7cfda8274bf004ebn,
    0xc326c46f44e595b5n,
    0x379256e40d4cb53cn,
    0x88493aac02592462n,
    0xea2255a1c6896745n,
    0x55f939e9c99cf61bn,
    0xa14dab628035d692n,
    0x1e96c72a8f2047ccn,
    0x5756cfc58d5ff8b2n,
    0xe88da38d824a69ecn,
    0x1c393106cbe34965n,
    0xa3e25d4ec4f6d83bn,
    0xc189324300269b1cn,
    0x7e525e0b0f330a42n,
    0x8ae6cc80469a2acbn,
    0x353da0c8498fbb95n,
    0x4e30129bcf3aac85n,
    0xf1eb7ed3c02f3ddbn,
    0x055fec5889861d52n,
    0xba84801086938c0cn,
    0xd8efef1d4243cf2bn,
    0x673483554d565e75n,
    0x938011de04ff7efcn,
    0x2c5b7d960beaefa2n,
    0xcb36eaf2132aa1b8n,
    0x74ed86ba1c3f30e6n,
    0x805914315596106fn,
    0x3f8278795a838131n,
    0x5de917749e53c216n,
    0xe2327b3c91465348n,
    0x1686e9b7d8ef73c1n,
    0xa95d85ffd7fae29fn,
    0xd25037ac514ff58fn,
    0x6d8b5be45e5a64d1n,
    0x993fc96f17f34458n,
    0x26e4a52718e6d506n,
    0x448fca2adc369621n,
    0xfb54a662d323077fn,
    0x0fe034e99a8a27f6n,
    0xb03b58a1959fb6a8n,
    0xf9fb504e97e009d6n,
    0x46203c0698f59888n,
    0xb294ae8dd15cb801n,
    0x0d4fc2c5de49295fn,
    0x6f24adc81a996a78n,
    0xd0ffc180158cfb26n,
    0x244b530b5c25dbafn,
    0x9b903f4353304af1n,
    0xe09d8d10d5855de1n,
    0x5f46e158da90ccbfn,
    0xabf273d39339ec36n,
    0x14291f9b9c2c7d68n,
    0x7642709658fc3e4fn,
    0xc9991cde57e9af11n,
    0x3d2d8e551e408f98n,
    0x82f6e21d11551ec6n,
    0xaead9f8b1abff164n,
    0x1176f3c315aa603an,
    0xe5c261485c0340b3n,
    0x5a190d005316d1edn,
    0x3872620d97c692can,
    0x87a90e4598d30394n,
    0x731d9cced17a231dn,
    0xccc6f086de6fb243n,
    0xb7cb42d558daa553n,
    0x08102e9d57cf340dn,
    0xfca4bc161e661484n,
    0x437fd05e117385dan,
    0x2114bf53d5a3c6fdn,
    0x9ecfd31bdab657a3n,
    0x6a7b4190931f772an,
    0xd5a02dd89c0ae674n,
    0x9c6025379e75590an,
    0x23bb497f9160c854n,
    0xd70fdbf4d8c9e8ddn,
    0x68d4b7bcd7dc7983n,
    0x0abfd8b1130c3aa4n,
    0xb564b4f91c19abfan,
    0x41d0267255b08b73n,
    0xfe0b4a3a5aa51a2dn,
    0x8506f869dc100d3dn,
    0x3add9421d3059c63n,
    0xce6906aa9aacbcean,
    0x71b26ae295b92db4n,
    0x13d905ef51696e93n,
    0xac0269a75e7cffcdn,
    0x58b6fb2c17d5df44n,
    0xe76d976418c04e1an,
    0xa2b4f3b77ec2d01bn,
    0x1d6f9fff71d74145n,
    0xe9db0d74387e61ccn,
    0x5600613c376bf092n,
    0x346b0e31f3bbb3b5n,
    0x8bb06279fcae22ebn,
    0x7f04f0f2b5070262n,
    0xc0df9cbaba12933cn,
    0xbbd22ee93ca7842cn,
    0x040942a133b21572n,
    0xf0bdd02a7a1b35fbn,
    0x4f66bc62750ea4a5n,
    0x2d0dd36fb1dee782n,
    0x92d6bf27becb76dcn,
    0x66622dacf7625655n,
    0xd9b941e4f877c70bn,
    0x9079490bfa087875n,
    0x2fa22543f51de92bn,
    0xdb16b7c8bcb4c9a2n,
    0x64cddb80b3a158fcn,
    0x06a6b48d77711bdbn,
    0xb97dd8c578648a85n,
    0x4dc94a4e31cdaa0cn,
    0xf21226063ed83b52n,
    0x891f9455b86d2c42n,
    0x36c4f81db778bd1cn,
    0xc2706a96fed19d95n,
    0x7dab06def1c40ccbn,
    0x1fc069d335144fecn,
    0xa01b059b3a01deb2n,
    0x54af971073a8fe3bn,
    0xeb74fb587cbd6f65n,
    0xc72f86ce775780c7n,
    0x78f4ea8678421199n,
    0x8c40780d31eb3110n,
    0x339b14453efea04en,
    0x51f07b48fa2ee369n,
    0xee2b1700f53b7237n,
    0x1a9f858bbc9252ben,
    0xa544e9c3b387c3e0n,
    0xde495b903532d4f0n,
    0x619237d83a2745aen,
    0x9526a553738e6527n,
    0x2afdc91b7c9bf479n,
    0x4896a616b84bb75en,
    0xf74dca5eb75e2600n,
    0x03f958d5fef70689n,
    0xbc22349df1e297d7n,
    0xf5e23c72f39d28a9n,
    0x4a39503afc88b9f7n,
    0xbe8dc2b1b521997en,
    0x0156aef9ba340820n,
    0x633dc1f47ee44b07n,
    0xdce6adbc71f1da59n,
    0x28523f373858fad0n,
    0x9789537f374d6b8en,
    0xec84e12cb1f87c9en,
    0x535f8d64beededc0n,
    0xa7eb1feff744cd49n,
    0x183073a7f8515c17n,
    0x7a5b1caa3c811f30n,
    0xc58070e233948e6en,
    0x3134e2697a3daee7n,
    0x8eef8e2175283fb9n,
    0x698219456de871a3n,
    0xd659750d62fde0fdn,
    0x22ede7862b54c074n,
    0x9d368bce2441512an,
    0xff5de4c3e091120dn,
    0x4086888bef848353n,
    0xb4321a00a62da3dan,
    0x0be97648a9383284n,
    0x70e4c41b2f8d2594n,
    0xcf3fa8532098b4can,
    0x3b8b3ad869319443n,
    0x845056906624051dn,
    0xe63b399da2f4463an,
    0x59e055d5ade1d764n,
    0xad54c75ee448f7edn,
    0x128fab16eb5d66b3n,
    0x5b4fa3f9e922d9cdn,
    0xe494cfb1e6374893n,
    0x10205d3aaf9e681an,
    0xaffb3172a08bf944n,
    0xcd905e7f645bba63n,
    0x724b32376b4e2b3dn,
    0x86ffa0bc22e70bb4n,
    0x3924ccf42df29aean,
    0x42297ea7ab478dfan,
    0xfdf212efa4521ca4n,
    0x09468064edfb3c2dn,
    0xb69dec2ce2eead73n,
    0xd4f68321263eee54n,
    0x6b2def69292b7f0an,
    0x9f997de260825f83n,
    0x204211aa6f97ceddn,
    0x0c196c3c647d217fn,
    0xb3c200746b68b021n,
    0x477692ff22c190a8n,
    0xf8adfeb72dd401f6n,
    0x9ac691bae90442d1n,
    0x251dfdf2e611d38fn,
    0xd1a96f79afb8f306n,
    0x6e720331a0ad6258n,
    0x157fb16226187548n,
    0xaaa4dd2a290de416n,
    0x5e104fa160a4c49fn,
    0xe1cb23e96fb155c1n,
    0x83a04ce4ab6116e6n,
    0x3c7b20aca47487b8n,
    0xc8cfb227eddda731n,
    0x7714de6fe2c8366fn,
    0x3ed4d680e0b78911n,
    0x810fbac8efa2184fn,
    0x75bb2843a60b38c6n,
    0xca60440ba91ea998n,
    0xa80b2b066dceeabfn,
    0x17d0474e62db7be1n,
    0xe364d5c52b725b68n,
    0x5cbfb98d2467ca36n,
    0x27b20bdea2d2dd26n,
    0x98696796adc74c78n,
    0x6cddf51de46e6cf1n,
    0xd3069955eb7bfdafn,
    0xb16df6582fabbe88n,
    0x0eb69a1020be2fd6n,
    0xfa02089b69170f5fn,
    0x45d964d366029e01n,

    0x0000000000000000n,
    0x3ea616bd2ae10d77n,
    0x7d4c2d7a55c21aeen,
    0x43ea3bc77f231799n,
    0xfa985af4ab8435dcn,
    0xc43e4c49816538abn,
    0x87d4778efe462f32n,
    0xb9726133d4a72245n,
    0xc1e993ba0f9ff8d3n,
    0xff4f8507257ef5a4n,
    0xbca5bec05a5de23dn,
    0x8203a87d70bcef4an,
    0x3b71c94ea41bcd0fn,
    0x05d7dff38efac078n,
    0x463de434f1d9d7e1n,
    0x789bf289db38da96n,
    0xb70a012747a862cdn,
    0x89ac179a6d496fban,
    0xca462c5d126a7823n,
    0xf4e03ae0388b7554n,
    0x4d925bd3ec2c5711n,
    0x73344d6ec6cd5a66n,
    0x30de76a9b9ee4dffn,
    0x0e786014930f4088n,
    0x76e3929d48379a1en,
    0x4845842062d69769n,
    0x0bafbfe71df580f0n,
    0x3509a95a37148d87n,
    0x8c7bc869e3b3afc2n,
    0xb2ddded4c952a2b5n,
    0xf137e513b671b52cn,
    0xcf91f3ae9c90b85bn,
    0x5acd241dd7c756f1n,
    0x646b32a0fd265b86n,
    0x2781096782054c1fn,
    0x19271fdaa8e44168n,
    0xa0557ee97c43632dn,
    0x9ef3685456a26e5an,
    0xdd195393298179c3n,
    0xe3bf452e036074b4n,
    0x9b24b7a7d858ae22n,
    0xa582a11af2b9a355n,
    0xe6689add8d9ab4ccn,
    0xd8ce8c60a77bb9bbn,
    0x61bced5373dc9bfen,
    0x5f1afbee593d9689n,
    0x1cf0c029261e8110n,
    0x2256d6940cff8c67n,
    0xedc7253a906f343cn,
    0xd3613387ba8e394bn,
    0x908b0840c5ad2ed2n,
    0xae2d1efdef4c23a5n,
    0x175f7fce3beb01e0n,
    0x29f96973110a0c97n,
    0x6a1352b46e291b0en,
    0x54b5440944c81679n,
    0x2c2eb6809ff0ccefn,
    0x1288a03db511c198n,
    0x51629bfaca32d601n,
    0x6fc48d47e0d3db76n,
    0xd6b6ec743474f933n,
    0xe810fac91e95f444n,
    0xabfac10e61b6e3ddn,
    0x955cd7b34b57eeaan,
    0xb59a483baf8eade2n,
    0x8b3c5e86856fa095n,
    0xc8d66541fa4cb70cn,
    0xf67073fcd0adba7bn,
    0x4f0212cf040a983en,
    0x71a404722eeb9549n,
    0x324e3fb551c882d0n,
    0x0ce829087b298fa7n,
    0x7473db81a0115531n,
    0x4ad5cd3c8af05846n,
    0x093ff6fbf5d34fdfn,
    0x3799e046df3242a8n,
    0x8eeb81750b9560edn,
    0xb04d97c821746d9an,
    0xf3a7ac0f5e577a03n,
    0xcd01bab274b67774n,
    0x0290491ce826cf2fn,
    0x3c365fa1c2c7c258n,
    0x7fdc6466bde4d5c1n,
    0x417a72db9705d8b6n,
    0xf80813e843a2faf3n,
    0xc6ae05556943f784n,
    0x85443e921660e01dn,
    0xbbe2282f3c81ed6an,
    0xc379daa6e7b937fcn,
    0xfddfcc1bcd583a8bn,
    0xbe35f7dcb27b2d12n,
    0x8093e161989a2065n,
    0x39e180524c3d0220n,
    0x074796ef66dc0f57n,
    0x44adad2819ff18cen,
    0x7a0bbb95331e15b9n,
    0xef576c267849fb13n,
    0xd1f17a9b52a8f664n,
    0x921b415c2d8be1fdn,
    0xacbd57e1076aec8an,
    0x15cf36d2d3cdcecfn,
    0x2b69206ff92cc3b8n,
    0x68831ba8860fd421n,
    0x56250d15aceed956n,
    0x2ebeff9c77d603c0n,
    0x1018e9215d370eb7n,
    0x53f2d2e62214192en,
    0x6d54c45b08f51459n,
    0xd426a568dc52361cn,
    0xea80b3d5f6b33b6bn,
    0xa96a881289902cf2n,
    0x97cc9eafa3712185n,
    0x585d6d013fe199den,
    0x66fb7bbc150094a9n,
    0x2511407b6a238330n,
    0x1bb756c640c28e47n,
    0xa2c537f59465ac02n,
    0x9c632148be84a175n,
    0xdf891a8fc1a7b6ecn,
    0xe12f0c32eb46bb9bn,
    0x99b4febb307e610dn,
    0xa712e8061a9f6c7an,
    0xe4f8d3c165bc7be3n,
    0xda5ec57c4f5d7694n,
    0x632ca44f9bfa54d1n,
    0x5d8ab2f2b11b59a6n,
    0x1e608935ce384e3fn,
    0x20c69f88e4d94348n,
    0x5fedb624078ac8afn,
    0x614ba0992d6bc5d8n,
    0x22a19b5e5248d241n,
    0x1c078de378a9df36n,
    0xa575ecd0ac0efd73n,
    0x9bd3fa6d86eff004n,
    0xd839c1aaf9cce79dn,
    0xe69fd717d32deaean,
    0x9e04259e0815307cn,
    0xa0a2332322f43d0bn,
    0xe34808e45dd72a92n,
    0xddee1e59773627e5n,
    0x649c7f6aa39105a0n,
    0x5a3a69d7897008d7n,
    0x19d05210f6531f4en,
    0x277644addcb21239n,
    0xe8e7b7034022aa62n,
    0xd641a1be6ac3a715n,
    0x95ab9a7915e0b08cn,
    0xab0d8cc43f01bdfbn,
    0x127fedf7eba69fben,
    0x2cd9fb4ac14792c9n,
    0x6f33c08dbe648550n,
    0x5195d63094858827n,
    0x290e24b94fbd52b1n,
    0x17a83204655c5fc6n,
    0x544209c31a7f485fn,
    0x6ae41f7e309e4528n,
    0xd3967e4de439676dn,
    0xed3068f0ced86a1an,
    0xaeda5337b1fb7d83n,
    0x907c458a9b1a70f4n,
    0x05209239d04d9e5en,
    0x3b868484faac9329n,
    0x786cbf43858f84b0n,
    0x46caa9feaf6e89c7n,
    0xffb8c8cd7bc9ab82n,
    0xc11ede705128a6f5n,
    0x82f4e5b72e0bb16cn,
    0xbc52f30a04eabc1bn,
    0xc4c90183dfd2668dn,
    0xfa6f173ef5336bfan,
    0xb9852cf98a107c63n,
    0x87233a44a0f17114n,
    0x3e515b7774565351n,
    0x00f74dca5eb75e26n,
    0x431d760d219449bfn,
    0x7dbb60b00b7544c8n,
    0xb22a931e97e5fc93n,
    0x8c8c85a3bd04f1e4n,
    0xcf66be64c227e67dn,
    0xf1c0a8d9e8c6eb0an,
    0x48b2c9ea3c61c94fn,
    0x7614df571680c438n,
    0x35fee49069a3d3a1n,
    0x0b58f22d4342ded6n,
    0x73c300a4987a0440n,
    0x4d651619b29b0937n,
    0x0e8f2ddecdb81eaen,
    0x30293b63e75913d9n,
    0x895b5a5033fe319cn,
    0xb7fd4ced191f3cebn,
    0xf417772a663c2b72n,
    0xcab161974cdd2605n,
    0xea77fe1fa804654dn,
    0xd4d1e8a282e5683an,
    0x973bd365fdc67fa3n,
    0xa99dc5d8d72772d4n,
    0x10efa4eb03805091n,
    0x2e49b25629615de6n,
    0x6da3899156424a7fn,
    0x53059f2c7ca34708n,
    0x2b9e6da5a79b9d9en,
    0x15387b188d7a90e9n,
    0x56d240dff2598770n,
    0x68745662d8b88a07n,
    0xd10637510c1fa842n,
    0xefa021ec26fea535n,
    0xac4a1a2b59ddb2acn,
    0x92ec0c96733cbfdbn,
    0x5d7dff38efac0780n,
    0x63dbe985c54d0af7n,
    0x2031d242ba6e1d6en,
    0x1e97c4ff908f1019n,
    0xa7e5a5cc4428325cn,
    0x9943b3716ec93f2bn,
    0xdaa988b611ea28b2n,
    0xe40f9e0b3b0b25c5n,
    0x9c946c82e033ff53n,
    0xa2327a3fcad2f224n,
    0xe1d841f8b5f1e5bdn,
    0xdf7e57459f10e8can,
    0x660c36764bb7ca8fn,
    0x58aa20cb6156c7f8n,
    0x1b401b0c1e75d061n,
    0x25e60db13494dd16n,
    0xb0bada027fc333bcn,
    0x8e1cccbf55223ecbn,
    0xcdf6f7782a012952n,
    0xf350e1c500e02425n,
    0x4a2280f6d4470660n,
    0x7484964bfea60b17n,
    0x376ead8c81851c8en,
    0x09c8bb31ab6411f9n,
    0x715349b8705ccb6fn,
    0x4ff55f055abdc618n,
    0x0c1f64c2259ed181n,
    0x32b9727f0f7fdcf6n,
    0x8bcb134cdbd8feb3n,
    0xb56d05f1f139f3c4n,
    0xf6873e368e1ae45dn,
    0xc821288ba4fbe92an,
    0x07b0db25386b5171n,
    0x3916cd98128a5c06n,
    0x7afcf65f6da94b9fn,
    0x445ae0e2474846e8n,
    0xfd2881d193ef64adn,
    0xc38e976cb90e69dan,
    0x8064acabc62d7e43n,
    0xbec2ba16eccc7334n,
    0xc659489f37f4a9a2n,
    0xf8ff5e221d15a4d5n,
    0xbb1565e56236b34cn,
    0x85b3735848d7be3bn,
    0x3cc1126b9c709c7en,
    0x026704d6b6919109n,
    0x418d3f11c9b28690n,
    0x7f2b29ace3538be7n,

    0x0000000000000000n,
    0x169489cc969951e5n,
    0x2d2913992d32a3can,
    0x3bbd9a55bbabf22fn,
    0x5a5227325a654794n,
    0x4cc6aefeccfc1671n,
    0x777b34ab7757e45en,
    0x61efbd67e1ceb5bbn,
    0xb4a44e64b4ca8f28n,
    0xa230c7a82253decdn,
    0x998d5dfd99f82ce2n,
    0x8f19d4310f617d07n,
    0xeef66956eeafc8bcn,
    0xf862e09a78369959n,
    0xc3df7acfc39d6b76n,
    0xd54bf30355043a93n,
    0x5d91ba9a31028d3bn,
    0x4b053356a79bdcden,
    0x70b8a9031c302ef1n,
    0x662c20cf8aa97f14n,
    0x07c39da86b67caafn,
    0x11571464fdfe9b4an,
    0x2aea8e3146556965n,
    0x3c7e07fdd0cc3880n,
    0xe935f4fe85c80213n,
    0xffa17d32135153f6n,
    0xc41ce767a8faa1d9n,
    0xd2886eab3e63f03cn,
    0xb367d3ccdfad4587n,
    0xa5f35a0049341462n,
    0x9e4ec055f29fe64dn,
    0x88da49996406b7a8n,
    0xbb23753462051a76n,
    0xadb7fcf8f49c4b93n,
    0x960a66ad4f37b9bcn,
    0x809eef61d9aee859n,
    0xe171520638605de2n,
    0xf7e5dbcaaef90c07n,
    0xcc58419f1552fe28n,
    0xdaccc85383cbafcdn,
    0x0f873b50d6cf955en,
    0x1913b29c4056c4bbn,
    0x22ae28c9fbfd3694n,
    0x343aa1056d646771n,
    0x55d51c628caad2can,
    0x434195ae1a33832fn,
    0x78fc0ffba1987100n,
    0x6e688637370120e5n,
    0xe6b2cfae5307974dn,
    0xf0264662c59ec6a8n,
    0xcb9bdc377e353487n,
    0xdd0f55fbe8ac6562n,
    0xbce0e89c0962d0d9n,
    0xaa7461509ffb813cn,
    0x91c9fb0524507313n,
    0x875d72c9b2c922f6n,
    0x521681cae7cd1865n,
    0x4482080671544980n,
    0x7f3f9253caffbbafn,
    0x69ab1b9f5c66ea4an,
    0x0844a6f8bda85ff1n,
    0x1ed02f342b310e14n,
    0x256db561909afc3bn,
    0x33f93cad0603adden,
    0x429fcc3b9c9da787n,
    0x540b45f70a04f662n,
    0x6fb6dfa2b1af044dn,
    0x7922566e273655a8n,
    0x18cdeb09c6f8e013n,
    0x0e5962c55061b1f6n,
    0x35e4f890ebca43d9n,
    0x2370715c7d53123cn,
    0xf63b825f285728afn,
    0xe0af0b93bece794an,
    0xdb1291c605658b65n,
    0xcd86180a93fcda80n,
    0xac69a56d72326f3bn,
    0xbafd2ca1e4ab3eden,
    0x8140b6f45f00ccf1n,
    0x97d43f38c9999d14n,
    0x1f0e76a1ad9f2abcn,
    0x099aff6d3b067b59n,
    0x3227653880ad8976n,
    0x24b3ecf41634d893n,
    0x455c5193f7fa6d28n,
    0x53c8d85f61633ccdn,
    0x6875420adac8cee2n,
    0x7ee1cbc64c519f07n,
    0xabaa38c51955a594n,
    0xbd3eb1098fccf471n,
    0x86832b5c3467065en,
    0x9017a290a2fe57bbn,
    0xf1f81ff74330e200n,
    0xe76c963bd5a9b3e5n,
    0xdcd10c6e6e0241can,
    0xca4585a2f89b102fn,
    0xf9bcb90ffe98bdf1n,
    0xef2830c36801ec14n,
    0xd495aa96d3aa1e3bn,
    0xc201235a45334fden,
    0xa3ee9e3da4fdfa65n,
    0xb57a17f13264ab80n,
    0x8ec78da489cf59afn,
    0x985304681f56084an,
    0x4d18f76b4a5232d9n,
    0x5b8c7ea7dccb633cn,
    0x6031e4f267609113n,
    0x76a56d3ef1f9c0f6n,
    0x174ad0591037754dn,
    0x01de599586ae24a8n,
    0x3a63c3c03d05d687n,
    0x2cf74a0cab9c8762n,
    0xa42d0395cf9a30can,
    0xb2b98a595903612fn,
    0x8904100ce2a89300n,
    0x9f9099c07431c2e5n,
    0xfe7f24a795ff775en,
    0xe8ebad6b036626bbn,
    0xd356373eb8cdd494n,
    0xc5c2bef22e548571n,
    0x10894df17b50bfe2n,
    0x061dc43dedc9ee07n,
    0x3da05e6856621c28n,
    0x2b34d7a4c0fb4dcdn,
    0x4adb6ac32135f876n,
    0x5c4fe30fb7aca993n,
    0x67f2795a0c075bbcn,
    0x7166f0969a9e0a59n,
    0x853f9877393b4f0en,
    0x93ab11bbafa21eebn,
    0xa8168bee1409ecc4n,
    0xbe8202228290bd21n,
    0xdf6dbf45635e089an,
    0xc9f93689f5c7597fn,
    0xf244acdc4e6cab50n,
    0xe4d02510d8f5fab5n,
    0x319bd6138df1c026n,
    0x270f5fdf1b6891c3n,
    0x1cb2c58aa0c363ecn,
    0x0a264c46365a3209n,
    0x6bc9f121d79487b2n,
    0x7d5d78ed410dd657n,
    0x46e0e2b8faa62478n,
    0x50746b746c3f759dn,
    0xd8ae22ed0839c235n,
    0xce3aab219ea093d0n,
    0xf5873174250b61ffn,
    0xe313b8b8b392301an,
    0x82fc05df525c85a1n,
    0x94688c13c4c5d444n,
    0xafd516467f6e266bn,
    0xb9419f8ae9f7778en,
    0x6c0a6c89bcf34d1dn,
    0x7a9ee5452a6a1cf8n,
    0x41237f1091c1eed7n,
    0x57b7f6dc0758bf32n,
    0x36584bbbe6960a89n,
    0x20ccc277700f5b6cn,
    0x1b715822cba4a943n,
    0x0de5d1ee5d3df8a6n,
    0x3e1ced435b3e5578n,
    0x2888648fcda7049dn,
    0x1335feda760cf6b2n,
    0x05a17716e095a757n,
    0x644eca71015b12ecn,
    0x72da43bd97c24309n,
    0x4967d9e82c69b126n,
    0x5ff35024baf0e0c3n,
    0x8ab8a327eff4da50n,
    0x9c2c2aeb796d8bb5n,
    0xa791b0bec2c6799an,
    0xb1053972545f287fn,
    0xd0ea8415b5919dc4n,
    0xc67e0dd92308cc21n,
    0xfdc3978c98a33e0en,
    0xeb571e400e3a6febn,
    0x638d57d96a3cd843n,
    0x7519de15fca589a6n,
    0x4ea44440470e7b89n,
    0x5830cd8cd1972a6cn,
    0x39df70eb30599fd7n,
    0x2f4bf927a6c0ce32n,
    0x14f663721d6b3c1dn,
    0x0262eabe8bf26df8n,
    0xd72919bddef6576bn,
    0xc1bd9071486f068en,
    0xfa000a24f3c4f4a1n,
    0xec9483e8655da544n,
    0x8d7b3e8f849310ffn,
    0x9befb743120a411an,
    0xa0522d16a9a1b335n,
    0xb6c6a4da3f38e2d0n,
    0xc7a0544ca5a6e889n,
    0xd134dd80333fb96cn,
    0xea8947d588944b43n,
    0xfc1dce191e0d1aa6n,
    0x9df2737effc3af1dn,
    0x8b66fab2695afef8n,
    0xb0db60e7d2f10cd7n,
    0xa64fe92b44685d32n,
    0x73041a28116c67a1n,
    0x659093e487f53644n,
    0x5e2d09b13c5ec46bn,
    0x48b9807daac7958en,
    0x29563d1a4b092035n,
    0x3fc2b4d6dd9071d0n,
    0x047f2e83663b83ffn,
    0x12eba74ff0a2d21an,
    0x9a31eed694a465b2n,
    0x8ca5671a023d3457n,
    0xb718fd4fb996c678n,
    0xa18c74832f0f979dn,
    0xc063c9e4cec12226n,
    0xd6f74028585873c3n,
    0xed4ada7de3f381ecn,
    0xfbde53b1756ad009n,
    0x2e95a0b2206eea9an,
    0x3801297eb6f7bb7fn,
    0x03bcb32b0d5c4950n,
    0x15283ae79bc518b5n,
    0x74c787807a0bad0en,
    0x62530e4cec92fcebn,
    0x59ee941957390ec4n,
    0x4f7a1dd5c1a05f21n,
    0x7c832178c7a3f2ffn,
    0x6a17a8b4513aa31an,
    0x51aa32e1ea915135n,
    0x473ebb2d7c0800d0n,
    0x26d1064a9dc6b56bn,
    0x30458f860b5fe48en,
    0x0bf815d3b0f416a1n,
    0x1d6c9c1f266d4744n,
    0xc8276f1c73697dd7n,
    0xdeb3e6d0e5f02c32n,
    0xe50e7c855e5bde1dn,
    0xf39af549c8c28ff8n,
    0x9275482e290c3a43n,
    0x84e1c1e2bf956ba6n,
    0xbf5c5bb7043e9989n,
    0xa9c8d27b92a7c86cn,
    0x21129be2f6a17fc4n,
    0x3786122e60382e21n,
    0x0c3b887bdb93dc0en,
    0x1aaf01b74d0a8debn,
    0x7b40bcd0acc43850n,
    0x6dd4351c3a5d69b5n,
    0x5669af4981f69b9an,
    0x40fd2685176fca7fn,
    0x95b6d586426bf0ecn,
    0x83225c4ad4f2a109n,
    0xb89fc61f6f595326n,
    0xae0b4fd3f9c002c3n,
    0xcfe4f2b4180eb778n,
    0xd9707b788e97e69dn,
    0xe2cde12d353c14b2n,
    0xf45968e1a3a54557n,

    0x0000000000000000n,
    0x0aed36d1a3bb9d7fn,
    0x15da6da347773afen,
    0x1f375b72e4cca781n,
    0x2bb4db468eee75fcn,
    0x2159ed972d55e883n,
    0x3e6eb6e5c9994f02n,
    0x348380346a22d27dn,
    0x5769b68d1ddcebf8n,
    0x5d84805cbe677687n,
    0x42b3db2e5aabd106n,
    0x485eedfff9104c79n,
    0x7cdd6dcb93329e04n,
    0x76305b1a3089037bn,
    0x69070068d445a4fan,
    0x63ea36b977fe3985n,
    0xaed36d1a3bb9d7f0n,
    0xa43e5bcb98024a8fn,
    0xbb0900b97cceed0en,
    0xb1e43668df757071n,
    0x8567b65cb557a20cn,
    0x8f8a808d16ec3f73n,
    0x90bddbfff22098f2n,
    0x9a50ed2e519b058dn,
    0xf9badb9726653c08n,
    0xf357ed4685dea177n,
    0xec60b634611206f6n,
    0xe68d80e5c2a99b89n,
    0xd20e00d1a88b49f4n,
    0xd8e336000b30d48bn,
    0xc7d46d72effc730an,
    0xcd395ba34c47ee75n,
    0x697ffc672fe43c8bn,
    0x6392cab68c5fa1f4n,
    0x7ca591c468930675n,
    0x7648a715cb289b0an,
    0x42cb2721a10a4977n,
    0x482611f002b1d408n,
    0x57114a82e67d7389n,
    0x5dfc7c5345c6eef6n,
    0x3e164aea3238d773n,
    0x34fb7c3b91834a0cn,
    0x2bcc2749754fed8dn,
    0x21211198d6f470f2n,
    0x15a291acbcd6a28fn,
    0x1f4fa77d1f6d3ff0n,
    0x0078fc0ffba19871n,
    0x0a95cade581a050en,
    0xc7ac917d145deb7bn,
    0xcd41a7acb7e67604n,
    0xd276fcde532ad185n,
    0xd89bca0ff0914cfan,
    0xec184a3b9ab39e87n,
    0xe6f57cea390803f8n,
    0xf9c22798ddc4a479n,
    0xf32f11497e7f3906n,
    0x90c527f009810083n,
    0x9a281121aa3a9dfcn,
    0x851f4a534ef63a7dn,
    0x8ff27c82ed4da702n,
    0xbb71fcb6876f757fn,
    0xb19cca6724d4e800n,
    0xaeab9115c0184f81n,
    0xa446a7c463a3d2fen,
    0xd2fff8ce5fc87916n,
    0xd812ce1ffc73e469n,
    0xc725956d18bf43e8n,
    0xcdc8a3bcbb04de97n,
    0xf94b2388d1260cean,
    0xf3a61559729d9195n,
    0xec914e2b96513614n,
    0xe67c78fa35eaab6bn,
    0x85964e43421492een,
    0x8f7b7892e1af0f91n,
    0x904c23e00563a810n,
    0x9aa11531a6d8356fn,
    0xae229505ccfae712n,
    0xa4cfa3d46f417a6dn,
    0xbbf8f8a68b8dddecn,
    0xb115ce7728364093n,
    0x7c2c95d46471aee6n,
    0x76c1a305c7ca3399n,
    0x69f6f87723069418n,
    0x631bcea680bd0967n,
    0x57984e92ea9fdb1an,
    0x5d75784349244665n,
    0x42422331ade8e1e4n,
    0x48af15e00e537c9bn,
    0x2b45235979ad451en,
    0x21a81588da16d861n,
    0x3e9f4efa3eda7fe0n,
    0x3472782b9d61e29fn,
    0x00f1f81ff74330e2n,
    0x0a1ccece54f8ad9dn,
    0x152b95bcb0340a1cn,
    0x1fc6a36d138f9763n,
    0xbb8004a9702c459dn,
    0xb16d3278d397d8e2n,
    0xae5a690a375b7f63n,
    0xa4b75fdb94e0e21cn,
    0x9034dfeffec23061n,
    0x9ad9e93e5d79ad1en,
    0x85eeb24cb9b50a9fn,
    0x8f03849d1a0e97e0n,
    0xece9b2246df0ae65n,
    0xe60484f5ce4b331an,
    0xf933df872a87949bn,
    0xf3dee956893c09e4n,
    0xc75d6962e31edb99n,
    0xcdb05fb340a546e6n,
    0xd28704c1a469e167n,
    0xd86a321007d27c18n,
    0x155369b34b95926dn,
    0x1fbe5f62e82e0f12n,
    0x008904100ce2a893n,
    0x0a6432c1af5935ecn,
    0x3ee7b2f5c57be791n,
    0x340a842466c07aeen,
    0x2b3ddf56820cdd6fn,
    0x21d0e98721b74010n,
    0x423adf3e56497995n,
    0x48d7e9eff5f2e4ean,
    0x57e0b29d113e436bn,
    0x5d0d844cb285de14n,
    0x698e0478d8a70c69n,
    0x636332a97b1c9116n,
    0x7c5469db9fd03697n,
    0x76b95f0a3c6babe8n,
    0x9126d7cfe7076147n,
    0x9bcbe11e44bcfc38n,
    0x84fcba6ca0705bb9n,
    0x8e118cbd03cbc6c6n,
    0xba920c8969e914bbn,
    0xb07f3a58ca5289c4n,
    0xaf48612a2e9e2e45n,
    0xa5a557fb8d25b33an,
    0xc64f6142fadb8abfn,
    0xcca25793596017c0n,
    0xd3950ce1bdacb041n,
    0xd9783a301e172d3en,
    0xedfbba047435ff43n,
    0xe7168cd5d78e623cn,
    0xf821d7a73342c5bdn,
    0xf2cce17690f958c2n,
    0x3ff5bad5dcbeb6b7n,
    0x35188c047f052bc8n,
    0x2a2fd7769bc98c49n,
    0x20c2e1a738721136n,
    0x144161935250c34bn,
    0x1eac5742f1eb5e34n,
    0x019b0c301527f9b5n,
    0x0b763ae1b69c64can,
    0x689c0c58c1625d4fn,
    0x62713a8962d9c030n,
    0x7d4661fb861567b1n,
    0x77ab572a25aefacen,
    0x4328d71e4f8c28b3n,
    0x49c5e1cfec37b5ccn,
    0x56f2babd08fb124dn,
    0x5c1f8c6cab408f32n,
    0xf8592ba8c8e35dccn,
    0xf2b41d796b58c0b3n,
    0xed83460b8f946732n,
    0xe76e70da2c2ffa4dn,
    0xd3edf0ee460d2830n,
    0xd900c63fe5b6b54fn,
    0xc6379d4d017a12cen,
    0xccdaab9ca2c18fb1n,
    0xaf309d25d53fb634n,
    0xa5ddabf476842b4bn,
    0xbaeaf08692488ccan,
    0xb007c65731f311b5n,
    0x848446635bd1c3c8n,
    0x8e6970b2f86a5eb7n,
    0x915e2bc01ca6f936n,
    0x9bb31d11bf1d6449n,
    0x568a46b2f35a8a3cn,
    0x5c67706350e11743n,
    0x43502b11b42db0c2n,
    0x49bd1dc017962dbdn,
    0x7d3e9df47db4ffc0n,
    0x77d3ab25de0f62bfn,
    0x68e4f0573ac3c53en,
    0x6209c68699785841n,
    0x01e3f03fee8661c4n,
    0x0b0ec6ee4d3dfcbbn,
    0x14399d9ca9f15b3an,
    0x1ed4ab4d0a4ac645n,
    0x2a572b7960681438n,
    0x20ba1da8c3d38947n,
    0x3f8d46da271f2ec6n,
    0x3560700b84a4b3b9n,
    0x43d92f01b8cf1851n,
    0x493419d01b74852en,
    0x560342a2ffb822afn,
    0x5cee74735c03bfd0n,
    0x686df44736216dadn,
    0x6280c296959af0d2n,
    0x7db799e471565753n,
    0x775aaf35d2edca2cn,
    0x14b0998ca513f3a9n,
    0x1e5daf5d06a86ed6n,
    0x016af42fe264c957n,
    0x0b87c2fe41df5428n,
    0x3f0442ca2bfd8655n,
    0x35e9741b88461b2an,
    0x2ade2f696c8abcabn,
    0x203319b8cf3121d4n,
    0xed0a421b8376cfa1n,
    0xe7e774ca20cd52den,
    0xf8d02fb8c401f55fn,
    0xf23d196967ba6820n,
    0xc6be995d0d98ba5dn,
    0xcc53af8cae232722n,
    0xd364f4fe4aef80a3n,
    0xd989c22fe9541ddcn,
    0xba63f4969eaa2459n,
    0xb08ec2473d11b926n,
    0xafb99935d9dd1ea7n,
    0xa554afe47a6683d8n,
    0x91d72fd0104451a5n,
    0x9b3a1901b3ffccdan,
    0x840d427357336b5bn,
    0x8ee074a2f488f624n,
    0x2aa6d366972b24dan,
    0x204be5b73490b9a5n,
    0x3f7cbec5d05c1e24n,
    0x3591881473e7835bn,
    0x0112082019c55126n,
    0x0bff3ef1ba7ecc59n,
    0x14c865835eb26bd8n,
    0x1e255352fd09f6a7n,
    0x7dcf65eb8af7cf22n,
    0x7722533a294c525dn,
    0x68150848cd80f5dcn,
    0x62f83e996e3b68a3n,
    0x567bbead0419baden,
    0x5c96887ca7a227a1n,
    0x43a1d30e436e8020n,
    0x494ce5dfe0d51d5fn,
    0x8475be7cac92f32an,
    0x8e9888ad0f296e55n,
    0x91afd3dfebe5c9d4n,
    0x9b42e50e485e54abn,
    0xafc1653a227c86d6n,
    0xa52c53eb81c71ba9n,
    0xba1b0899650bbc28n,
    0xb0f63e48c6b02157n,
    0xd31c08f1b14e18d2n,
    0xd9f13e2012f585adn,
    0xc6c66552f639222cn,
    0xcc2b53835582bf53n,
    0xf8a8d3b73fa06d2en,
    0xf245e5669c1bf051n,
    0xed72be1478d757d0n,
    0xe79f88c5db6ccaafn,

    0x0000000000000000n,
    0xb0bc2e589204f500n,
    0x55a17ae27c9e796bn,
    0xe51d54baee9a8c6bn,
    0xab42f5c4f93cf2d6n,
    0x1bfedb9c6b3807d6n,
    0xfee38f2685a28bbdn,
    0x4e5fa17e17a67ebdn,
    0x625ccddaaaee76c7n,
    0xd2e0e38238ea83c7n,
    0x37fdb738d6700facn,
    0x874199604474faacn,
    0xc91e381e53d28411n,
    0x79a21646c1d67111n,
    0x9cbf42fc2f4cfd7an,
    0x2c036ca4bd48087an,
    0xc4b99bb555dced8en,
    0x7405b5edc7d8188en,
    0x9118e157294294e5n,
    0x21a4cf0fbb4661e5n,
    0x6ffb6e71ace01f58n,
    0xdf4740293ee4ea58n,
    0x3a5a1493d07e6633n,
    0x8ae63acb427a9333n,
    0xa6e5566fff329b49n,
    0x165978376d366e49n,
    0xf3442c8d83ace222n,
    0x43f802d511a81722n,
    0x0da7a3ab060e699fn,
    0xbd1b8df3940a9c9fn,
    0x5806d9497a9010f4n,
    0xe8baf711e894e5f4n,
    0xbdaa1139f32e4877n,
    0x0d163f61612abd77n,
    0xe80b6bdb8fb0311cn,
    0x58b745831db4c41cn,
    0x16e8e4fd0a12baa1n,
    0xa654caa598164fa1n,
    0x43499e1f768cc3can,
    0xf3f5b047e48836can,
    0xdff6dce359c03eb0n,
    0x6f4af2bbcbc4cbb0n,
    0x8a57a601255e47dbn,
    0x3aeb8859b75ab2dbn,
    0x74b42927a0fccc66n,
    0xc408077f32f83966n,
    0x211553c5dc62b50dn,
    0x91a97d9d4e66400dn,
    0x79138a8ca6f2a5f9n,
    0xc9afa4d434f650f9n,
    0x2cb2f06eda6cdc92n,
    0x9c0ede3648682992n,
    0xd2517f485fce572fn,
    0x62ed5110cdcaa22fn,
    0x87f005aa23502e44n,
    0x374c2bf2b154db44n,
    0x1b4f47560c1cd33en,
    0xabf3690e9e18263en,
    0x4eee3db47082aa55n,
    0xfe5213ece2865f55n,
    0xb00db292f52021e8n,
    0x00b19cca6724d4e8n,
    0xe5acc87089be5883n,
    0x5510e6281bbaad83n,
    0x4f8d0420becb0385n,
    0xff312a782ccff685n,
    0x1a2c7ec2c2557aeen,
    0xaa90509a50518feen,
    0xe4cff1e447f7f153n,
    0x5473dfbcd5f30453n,
    0xb16e8b063b698838n,
    0x01d2a55ea96d7d38n,
    0x2dd1c9fa14257542n,
    0x9d6de7a286218042n,
    0x7870b31868bb0c29n,
    0xc8cc9d40fabff929n,
    0x86933c3eed198794n,
    0x362f12667f1d7294n,
    0xd33246dc9187feffn,
    0x638e688403830bffn,
    0x8b349f95eb17ee0bn,
    0x3b88b1cd79131b0bn,
    0xde95e57797899760n,
    0x6e29cb2f058d6260n,
    0x20766a51122b1cddn,
    0x90ca4409802fe9ddn,
    0x75d710b36eb565b6n,
    0xc56b3eebfcb190b6n,
    0xe968524f41f998ccn,
    0x59d47c17d3fd6dccn,
    0xbcc928ad3d67e1a7n,
    0x0c7506f5af6314a7n,
    0x422aa78bb8c56a1an,
    0xf29689d32ac19f1an,
    0x178bdd69c45b1371n,
    0xa737f331565fe671n,
    0xf22715194de54bf2n,
    0x429b3b41dfe1bef2n,
    0xa7866ffb317b3299n,
    0x173a41a3a37fc799n,
    0x5965e0ddb4d9b924n,
    0xe9d9ce8526dd4c24n,
    0x0cc49a3fc847c04fn,
    0xbc78b4675a43354fn,
    0x907bd8c3e70b3d35n,
    0x20c7f69b750fc835n,
    0xc5daa2219b95445en,
    0x75668c790991b15en,
    0x3b392d071e37cfe3n,
    0x8b85035f8c333ae3n,
    0x6e9857e562a9b688n,
    0xde2479bdf0ad4388n,
    0x369e8eac1839a67cn,
    0x8622a0f48a3d537cn,
    0x633ff44e64a7df17n,
    0xd383da16f6a32a17n,
    0x9ddc7b68e10554aan,
    0x2d6055307301a1aan,
    0xc87d018a9d9b2dc1n,
    0x78c12fd20f9fd8c1n,
    0x54c24376b2d7d0bbn,
    0xe47e6d2e20d325bbn,
    0x01633994ce49a9d0n,
    0xb1df17cc5c4d5cd0n,
    0xff80b6b24beb226dn,
    0x4f3c98ead9efd76dn,
    0xaa21cc5037755b06n,
    0x1a9de208a571ae06n,
    0x9f1a08417d96070an,
    0x2fa62619ef92f20an,
    0xcabb72a301087e61n,
    0x7a075cfb930c8b61n,
    0x3458fd8584aaf5dcn,
    0x84e4d3dd16ae00dcn,
    0x61f98767f8348cb7n,
    0xd145a93f6a3079b7n,
    0xfd46c59bd77871cdn,
    0x4dfaebc3457c84cdn,
    0xa8e7bf79abe608a6n,
    0x185b912139e2fda6n,
    0x5604305f2e44831bn,
    0xe6b81e07bc40761bn,
    0x03a54abd52dafa70n,
    0xb31964e5c0de0f70n,
    0x5ba393f4284aea84n,
    0xeb1fbdacba4e1f84n,
    0x0e02e91654d493efn,
    0xbebec74ec6d066efn,
    0xf0e16630d1761852n,
    0x405d48684372ed52n,
    0xa5401cd2ade86139n,
    0x15fc328a3fec9439n,
    0x39ff5e2e82a49c43n,
    0x8943707610a06943n,
    0x6c5e24ccfe3ae528n,
    0xdce20a946c3e1028n,
    0x92bdabea7b986e95n,
    0x220185b2e99c9b95n,
    0xc71cd108070617fen,
    0x77a0ff509502e2fen,
    0x22b019788eb84f7dn,
    0x920c37201cbcba7dn,
    0x7711639af2263616n,
    0xc7ad4dc26022c316n,
    0x89f2ecbc7784bdabn,
    0x394ec2e4e58048abn,
    0xdc53965e0b1ac4c0n,
    0x6cefb806991e31c0n,
    0x40ecd4a2245639ban,
    0xf050fafab652ccban,
    0x154dae4058c840d1n,
    0xa5f18018caccb5d1n,
    0xebae2166dd6acb6cn,
    0x5b120f3e4f6e3e6cn,
    0xbe0f5b84a1f4b207n,
    0x0eb375dc33f04707n,
    0xe60982cddb64a2f3n,
    0x56b5ac95496057f3n,
    0xb3a8f82fa7fadb98n,
    0x0314d67735fe2e98n,
    0x4d4b770922585025n,
    0xfdf75951b05ca525n,
    0x18ea0deb5ec6294en,
    0xa85623b3ccc2dc4en,
    0x84554f17718ad434n,
    0x34e9614fe38e2134n,
    0xd1f435f50d14ad5fn,
    0x61481bad9f10585fn,
    0x2f17bad388b626e2n,
    0x9fab948b1ab2d3e2n,
    0x7ab6c031f4285f89n,
    0xca0aee69662caa89n,
    0xd0970c61c35d048fn,
    0x602b22395159f18fn,
    0x85367683bfc37de4n,
    0x358a58db2dc788e4n,
    0x7bd5f9a53a61f659n,
    0xcb69d7fda8650359n,
    0x2e74834746ff8f32n,
    0x9ec8ad1fd4fb7a32n,
    0xb2cbc1bb69b37248n,
    0x0277efe3fbb78748n,
    0xe76abb59152d0b23n,
    0x57d695018729fe23n,
    0x1989347f908f809en,
    0xa9351a27028b759en,
    0x4c284e9dec11f9f5n,
    0xfc9460c57e150cf5n,
    0x142e97d49681e901n,
    0xa492b98c04851c01n,
    0x418fed36ea1f906an,
    0xf133c36e781b656an,
    0xbf6c62106fbd1bd7n,
    0x0fd04c48fdb9eed7n,
    0xeacd18f2132362bcn,
    0x5a7136aa812797bcn,
    0x76725a0e3c6f9fc6n,
    0xc6ce7456ae6b6ac6n,
    0x23d320ec40f1e6adn,
    0x936f0eb4d2f513adn,
    0xdd30afcac5536d10n,
    0x6d8c819257579810n,
    0x8891d528b9cd147bn,
    0x382dfb702bc9e17bn,
    0x6d3d1d5830734cf8n,
    0xdd813300a277b9f8n,
    0x389c67ba4ced3593n,
    0x882049e2dee9c093n,
    0xc67fe89cc94fbe2en,
    0x76c3c6c45b4b4b2en,
    0x93de927eb5d1c745n,
    0x2362bc2627d53245n,
    0x0f61d0829a9d3a3fn,
    0xbfddfeda0899cf3fn,
    0x5ac0aa60e6034354n,
    0xea7c84387407b654n,
    0xa423254663a1c8e9n,
    0x149f0b1ef1a53de9n,
    0xf1825fa41f3fb182n,
    0x413e71fc8d3b4482n,
    0xa98486ed65afa176n,
    0x1938a8b5f7ab5476n,
    0xfc25fc0f1931d81dn,
    0x4c99d2578b352d1dn,
    0x02c673299c9353a0n,
    0xb27a5d710e97a6a0n,
    0x576709cbe00d2acbn,
    0xe7db27937209dfcbn,
    0xcbd84b37cf41d7b1n,
    0x7b64656f5d4522b1n,
    0x9e7931d5b3dfaedan,
    0x2ec51f8d21db5bdan,
    0x609abef3367d2567n,
    0xd02690aba479d067n,
    0x353bc4114ae35c0cn,
    0x8587ea49d8e7a90cn,
  ];

  private m_uX2N = [
    0x0080000000000000n,
    0x0000800000000000n,
    0x0000000080000000n,
    0x9a6c9329ac4bc9b5n,
    0x10f4bb0f129310d6n,
    0x70f05dcea2ebd226n,
    0x311211205672822dn,
    0x2fc297db0f46c96en,
    0xca4d536fabf7da84n,
    0xfb4cdc3b379ee6edn,
    0xea261148df25140an,
    0x59ccb2c07aa6c9b4n,
    0x20b3674a839af27an,
    0x2d8e1986da94d583n,
    0x42cdf4c20337635dn,
    0x1d78724bf0f26839n,
    0xb96c84e0afb34bd5n,
    0x5d2e1fcd2df0a3ean,
    0xcd9506572332be42n,
    0x23bda2427f7d690fn,
    0x347a953232374f07n,
    0x1c2a807ac2a8ceean,
    0x9b92ad0e14fe1460n,
    0x2574114889f670b2n,
    0x4a84a6c45e3bf520n,
    0x915bbac21cd1c7ffn,
    0xb0290ec579f291f5n,
    0xcf2548505c624e6en,
    0xb154f27bf08a8207n,
    0xce4e92344baf7d35n,
    0x51da8d7e057c5eb3n,
    0x9fb10823f5be15dfn,
    0x73b825b3ff1f71cfn,
    0x5db436c5406ebb74n,
    0xfa7ed8f3ec3f2bcan,
    0xc4d58efdc61b9ef6n,
    0xa7e39e61e855bd45n,
    0x97ad46f9dd1bf2f1n,
    0x1a0abb01f853ee6bn,
    0x3f0827c3348f8215n,
    0x4eb68c4506134607n,
    0x4a46f6de5df34e0an,
    0x2d855d6a1c57a8ddn,
    0x8688da58e1115812n,
    0x5232f417fc7c7300n,
    0xa4080fb2e767d8dan,
    0xd515a7e17693e562n,
    0x1181f7c862e94226n,
    0x9e23cd058204ca91n,
    0x9b8992c57a0aed82n,
    0xb2c0afb84609b6ffn,
    0x2f7160553a5ea018n,
    0x3cd378b5c99f2722n,
    0x814054ad61a3b058n,
    0xbf766189fce806d8n,
    0x85a5e898ac49f86fn,
    0x34830d11bc84f346n,
    0x9644d95b173c8c1cn,
    0x150401ac9ac759b1n,
    0xebe1f7f46fb00eban,
    0x8ee4ce0c2e2bd662n,
    0x4000000000000000n,
    0x2000000000000000n,
    0x0800000000000000n,
  ];

  private readBigUInt64LE(src: Uint8Array): bigint {
    let result = 0n;
    for (let i = 0; i < 8; ++i) {
      result += BigInt(src[i]) << (BigInt(i) * 8n);
    }
    return result;
  }

  //public static UInt64 ComputeSlicedSpan(
  //    ReadOnlySpan<byte> pSrc,
  //    UInt64 uCrc
  //)
  //{
  //    var u1 = new ReadOnlySpan<ulong>(CRC64.m_u1);
  //    var u32 = new ReadOnlySpan<ulong>(CRC64.m_u32);
  //    var pSrcLongs = MemoryMarshal.Cast<byte, ulong>(pSrc);

  //    {
  //        //byte* pData = pSrc;
  //        int offset = 0;
  //        ulong uSize = (ulong)pSrc.Length;

  //        int uBytes;
  //        ulong uStop;

  //        uCrc ^= ~0UL;

  //        uStop = uSize - (uSize % 32);
  //        if (uStop >= 2 * 32)
  //        {
  //            ulong uCrc0 = 0;
  //            ulong uCrc1 = 0;
  //            ulong uCrc2 = 0;
  //            ulong uCrc3 = 0;

  //            int lastOffset = (offset + (int)uStop - 32) / 8;
  //            uSize -= uStop;
  //            uCrc0 = uCrc;

  //            for (; offset < lastOffset; offset += 4)
  //            {
  //                UInt64 b0;
  //                UInt64 b1;
  //                UInt64 b2;
  //                UInt64 b3;

  //                b0 = pSrcLongs[offset + 0] ^ uCrc0;
  //                b1 = pSrcLongs[offset + 1] ^ uCrc1;
  //                b2 = pSrcLongs[offset + 2] ^ uCrc2;
  //                b3 = pSrcLongs[offset + 3] ^ uCrc3;

  //                uCrc0 = u32[(int)((7) * 256 + ((b0) & (256 - 1)))];
  //                b0 >>= 8;
  //                uCrc1 = u32[(int)((7) * 256 + ((b1) & (256 - 1)))];
  //                b1 >>= 8;
  //                uCrc2 = u32[(int)((7) * 256 + ((b2) & (256 - 1)))];
  //                b2 >>= 8;
  //                uCrc3 = u32[(int)((7) * 256 + ((b3) & (256 - 1)))];
  //                b3 >>= 8;
  //                uCrc0 ^= u32[(int)((6) * 256 + ((b0) & (256 - 1)))];
  //                b0 >>= 8;
  //                uCrc1 ^= u32[(int)((6) * 256 + ((b1) & (256 - 1)))];
  //                b1 >>= 8;
  //                uCrc2 ^= u32[(int)((6) * 256 + ((b2) & (256 - 1)))];
  //                b2 >>= 8;
  //                uCrc3 ^= u32[(int)((6) * 256 + ((b3) & (256 - 1)))];
  //                b3 >>= 8;
  //                uCrc0 ^= u32[(int)((5) * 256 + ((b0) & (256 - 1)))];
  //                b0 >>= 8;
  //                uCrc1 ^= u32[(int)((5) * 256 + ((b1) & (256 - 1)))];
  //                b1 >>= 8;
  //                uCrc2 ^= u32[(int)((5) * 256 + ((b2) & (256 - 1)))];
  //                b2 >>= 8;
  //                uCrc3 ^= u32[(int)((5) * 256 + ((b3) & (256 - 1)))];
  //                b3 >>= 8;
  //                uCrc0 ^= u32[(int)((4) * 256 + ((b0) & (256 - 1)))];
  //                b0 >>= 8;
  //                uCrc1 ^= u32[(int)((4) * 256 + ((b1) & (256 - 1)))];
  //                b1 >>= 8;
  //                uCrc2 ^= u32[(int)((4) * 256 + ((b2) & (256 - 1)))];
  //                b2 >>= 8;
  //                uCrc3 ^= u32[(int)((4) * 256 + ((b3) & (256 - 1)))];
  //                b3 >>= 8;
  //                uCrc0 ^= u32[(int)((3) * 256 + ((b0) & (256 - 1)))];
  //                b0 >>= 8;
  //                uCrc1 ^= u32[(int)((3) * 256 + ((b1) & (256 - 1)))];
  //                b1 >>= 8;
  //                uCrc2 ^= u32[(int)((3) * 256 + ((b2) & (256 - 1)))];
  //                b2 >>= 8;
  //                uCrc3 ^= u32[(int)((3) * 256 + ((b3) & (256 - 1)))];
  //                b3 >>= 8;
  //                uCrc0 ^= u32[(int)((2) * 256 + ((b0) & (256 - 1)))];
  //                b0 >>= 8;
  //                uCrc1 ^= u32[(int)((2) * 256 + ((b1) & (256 - 1)))];
  //                b1 >>= 8;
  //                uCrc2 ^= u32[(int)((2) * 256 + ((b2) & (256 - 1)))];
  //                b2 >>= 8;
  //                uCrc3 ^= u32[(int)((2) * 256 + ((b3) & (256 - 1)))];
  //                b3 >>= 8;
  //                uCrc0 ^= u32[(int)((1) * 256 + ((b0) & (256 - 1)))];
  //                b0 >>= 8;
  //                uCrc1 ^= u32[(int)((1) * 256 + ((b1) & (256 - 1)))];
  //                b1 >>= 8;
  //                uCrc2 ^= u32[(int)((1) * 256 + ((b2) & (256 - 1)))];
  //                b2 >>= 8;
  //                uCrc3 ^= u32[(int)((1) * 256 + ((b3) & (256 - 1)))];
  //                b3 >>= 8;
  //                uCrc0 ^= u32[(int)((0) * 256 + ((b0) & (256 - 1)))];
  //                uCrc1 ^= u32[(int)((0) * 256 + ((b1) & (256 - 1)))];
  //                uCrc2 ^= u32[(int)((0) * 256 + ((b2) & (256 - 1)))];
  //                uCrc3 ^= u32[(int)((0) * 256 + ((b3) & (256 - 1)))];
  //            }

  //            uCrc = 0;
  //            uCrc ^= pSrcLongs[offset + 0] ^ uCrc0;
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc ^= pSrcLongs[offset + 1] ^ uCrc1;
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc ^= pSrcLongs[offset + 2] ^ uCrc2;
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc ^= pSrcLongs[offset + 3] ^ uCrc3;
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            uCrc = (uCrc >> 8) ^ u1[(int)(((uCrc) & (256 - 1)))];
  //            offset += 4;
  //        }

  //        for (uBytes = 0; uBytes < (int)uSize; ++uBytes)
  //            uCrc = (uCrc >> 8) ^ u1[(int)(uCrc ^ pSrc[offset + uBytes]) & (256 - 1)];

  //        return (uCrc ^ ~0UL);
  //    }
  //}

  /// <summary>
  /// Compute the CRC64 of the input data using the Azure Storage CRC64 polynomial.
  /// </summary>
  /// <param name="src">The source data on which to compute the CRC64.</param>
  /// <param name="uCrc"></param>
  /// <returns></returns>
  public ComputeSlicedSafe(src: Uint8Array, uCrc: bigint): bigint {
    let pData = 0;
    let uSize = src.length;

    let uBytes: number, uStop: number;

    uCrc ^= 0xffffffffffffffffn;

    // No need to do alignment for .NET. If we accept an offset
    // in this method, it can re-enabled

    //uStop = ((ulong)(-(long)pData)) & (sizeof(UInt64) - 1);
    //if (uStop != 0)
    //{
    //    if (uStop > uSize)
    //        uStop = uSize;
    //    for (uBytes = 0; uBytes < uStop; ++uBytes)
    //        uCrc = (uCrc >> 8) ^ m_u1[((uCrc ^ pData[uBytes]) & (256 - 1))];
    //    uSize -= uStop;
    //    pData += uStop;
    //}

    uBytes = 0;
    uStop = uSize - (uSize % 32);
    if (uStop >= 2 * 32) {
      let uCrc0 = 0n;
      let uCrc1 = 0n;
      let uCrc2 = 0n;
      let uCrc3 = 0n;
      let pLast = pData + uStop - 32;
      uSize -= uStop;
      uCrc0 = uCrc;

      for (; pData < pLast; pData += 32) {
        let b0: bigint;
        let b1: bigint;
        let b2: bigint;
        let b3: bigint;

        b0 = this.readBigUInt64LE(src.slice(pData + 8 * 0)) ^ uCrc0;
        b1 = this.readBigUInt64LE(src.slice(pData + 8 * 1)) ^ uCrc1;
        b2 = this.readBigUInt64LE(src.slice(pData + 8 * 2)) ^ uCrc2;
        b3 = this.readBigUInt64LE(src.slice(pData + 8 * 3)) ^ uCrc3;
        uCrc0 = this.m_u32[7 * 256 + Number(b0 & 255n)];
        b0 >>= 8n;
        uCrc1 = this.m_u32[7 * 256 + Number(b1 & 255n)];
        b1 >>= 8n;
        uCrc2 = this.m_u32[7 * 256 + Number(b2 & 255n)];
        b2 >>= 8n;
        uCrc3 = this.m_u32[7 * 256 + Number(b3 & 255n)];
        b3 >>= 8n;
        uCrc0 ^= this.m_u32[6 * 256 + Number(b0 & 255n)];
        b0 >>= 8n;
        uCrc1 ^= this.m_u32[6 * 256 + Number(b1 & 255n)];
        b1 >>= 8n;
        uCrc2 ^= this.m_u32[6 * 256 + Number(b2 & 255n)];
        b2 >>= 8n;
        uCrc3 ^= this.m_u32[6 * 256 + Number(b3 & 255n)];
        b3 >>= 8n;
        uCrc0 ^= this.m_u32[5 * 256 + Number(b0 & 255n)];
        b0 >>= 8n;
        uCrc1 ^= this.m_u32[5 * 256 + Number(b1 & 255n)];
        b1 >>= 8n;
        uCrc2 ^= this.m_u32[5 * 256 + Number(b2 & 255n)];
        b2 >>= 8n;
        uCrc3 ^= this.m_u32[5 * 256 + Number(b3 & 255n)];
        b3 >>= 8n;
        uCrc0 ^= this.m_u32[4 * 256 + Number(b0 & 255n)];
        b0 >>= 8n;
        uCrc1 ^= this.m_u32[4 * 256 + Number(b1 & 255n)];
        b1 >>= 8n;
        uCrc2 ^= this.m_u32[4 * 256 + Number(b2 & 255n)];
        b2 >>= 8n;
        uCrc3 ^= this.m_u32[4 * 256 + Number(b3 & 255n)];
        b3 >>= 8n;
        uCrc0 ^= this.m_u32[3 * 256 + Number(b0 & 255n)];
        b0 >>= 8n;
        uCrc1 ^= this.m_u32[3 * 256 + Number(b1 & 255n)];
        b1 >>= 8n;
        uCrc2 ^= this.m_u32[3 * 256 + Number(b2 & 255n)];
        b2 >>= 8n;
        uCrc3 ^= this.m_u32[3 * 256 + Number(b3 & 255n)];
        b3 >>= 8n;
        uCrc0 ^= this.m_u32[2 * 256 + Number(b0 & 255n)];
        b0 >>= 8n;
        uCrc1 ^= this.m_u32[2 * 256 + Number(b1 & 255n)];
        b1 >>= 8n;
        uCrc2 ^= this.m_u32[2 * 256 + Number(b2 & 255n)];
        b2 >>= 8n;
        uCrc3 ^= this.m_u32[2 * 256 + Number(b3 & 255n)];
        b3 >>= 8n;
        uCrc0 ^= this.m_u32[1 * 256 + Number(b0 & 255n)];
        b0 >>= 8n;
        uCrc1 ^= this.m_u32[1 * 256 + Number(b1 & 255n)];
        b1 >>= 8n;
        uCrc2 ^= this.m_u32[1 * 256 + Number(b2 & 255n)];
        b2 >>= 8n;
        uCrc3 ^= this.m_u32[1 * 256 + Number(b3 & 255n)];
        b3 >>= 8n;
        uCrc0 ^= this.m_u32[0 * 256 + Number(b0 & 255n)];
        uCrc1 ^= this.m_u32[0 * 256 + Number(b1 & 255n)];
        uCrc2 ^= this.m_u32[0 * 256 + Number(b2 & 255n)];
        uCrc3 ^= this.m_u32[0 * 256 + Number(b3 & 255n)];
      }

      uCrc = 0n;
      uCrc ^= this.readBigUInt64LE(src.slice(pData + 8 * 0)) ^ uCrc0;
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc ^= this.readBigUInt64LE(src.slice(pData + 8 * 1)) ^ uCrc1;
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc ^= this.readBigUInt64LE(src.slice(pData + 8 * 2)) ^ uCrc2;
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc ^= this.readBigUInt64LE(src.slice(pData + 8 * 3)) ^ uCrc3;
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      uCrc = (uCrc >> 8n) ^ this.m_u1[Number(uCrc & 255n)];
      pData += 32;
    }

    for (uBytes = 0; uBytes < uSize; ++uBytes, ++pData) {
      uCrc = (uCrc >> 8n) ^ this.m_u1[(Number(uCrc & 255n) ^ src[pData]) & (256 - 1)];
    }

    return uCrc ^ 0xffffffffffffffffn;
  }

  private m_uComplement = ~0n;
  private m_uBitWidth = 64;

  //
  // Given
  //      uFinalCrcA = ComputeCrc (A, uSizeA, uInitialCrcA)
  // and
  //      uFinalCrcB = ComputeCrc (B, uSizeB, uInitialCrcB),
  // compute CRC of concatenation of A and B
  //      uFinalCrcAB = ComputeCrc (AB, uSizeA + uSizeB, uInitialCrcAB)
  // without touching A and B
  //
  // NB: uSizeA and/or uSizeB may be 0s (this trick may be used to "recompute" CRC for another initial value)
  //
  public Concatenate(
    uInitialCrcAB: bigint,
    uInitialCrcA: bigint,
    uFinalCrcA: bigint,
    uSizeA: bigint,
    uInitialCrcB: bigint,
    uFinalCrcB: bigint,
    uSizeB: bigint
  ): bigint {
    var uFinalCrcAB = uFinalCrcA ^ this.m_uComplement;

    if (uInitialCrcA != uInitialCrcAB) {
      uFinalCrcAB ^= this.MulX_N(uInitialCrcA ^ uInitialCrcAB, uSizeA);
    }

    uFinalCrcAB ^= uInitialCrcB ^ this.m_uComplement;
    uFinalCrcAB = this.MulX_N(uFinalCrcAB, uSizeB);
    uFinalCrcAB ^= uFinalCrcB;

    return uFinalCrcAB;
  }

  //
  // Returns MulPoly(a, ComputeX_N(uSize)).
  //
  private MulX_N(a: bigint, uSize: bigint): bigint {
    let i = 0n;

    let r = a;

    for (uSize >>= i; uSize != 0n; uSize >>= 1n, i += 1n) {
      if ((uSize & 1n) == 1n) {
        r = this.MulPoly(r, this.m_uX2N[Number(i)]);
      }
    }

    return r;
  }

  //
  // Returns (a * b) mod POLY.
  // "a" and "b" are represented in "reversed" order -- LSB is x**(XX-1) coefficient, MSB is x^0 coefficient.
  // "POLY" is represented in the same manner except for omitted x**XX coefficient
  //
  private MulPoly(a: bigint, b: bigint) {
    return this.MulPolyUnrolled(a, b);
  }

  //
  // Returns (a * b) mod POLY.
  // "a" and "b" are represented in "reversed" order -- LSB is x**(XX-1) coefficient, MSB is x^0 coefficient.
  // "POLY" is represented in the same manner except for omitted x**XX coefficient
  //
  private MulPolyUnrolled(a: bigint, b: bigint) {
    // Unrolled version without SSE 4.1.
    let p = this.poly;
    let p2 = (p >> 1n) ^ (p * (p & 1n));
    let bw = this.m_uBitWidth;

    let vt = [0n, p2, p, p ^ p2];
    let vs = [bw - 2, bw - 1];
    let vb = [(b >> 1n) ^ vt[Number((b & 1n) << 1n)], b];
    let vr = [0n, 0n];

    for (var i = 0; i < bw; i += 2) {
      for (let j = 0; j < 2; ++j) {
        vr[j] ^= vb[j] * ((a >> BigInt(vs[j])) & 1n);
        vb[j] = (vb[j] >> 2n) ^ vt[Number(vb[j] & 3n)];
      }

      a <<= 2n;
    }

    return vr[0] ^ vr[1];
  }
}
